{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\drinks.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query($id: ID!) {\\n      restaurant(id: $id) {\\n        id\\n        name\\n        drinks {\\n          id\\n          name\\n          description\\n          price\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\n\nfunction Drinks(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DRINKS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANT_DRINKS, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 23\n    }\n  }, \"Loading drink...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"No drinks found\");\n  var restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.drinks && restaurant.drinks.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 1\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"10px 10px\",\n          color: 'blue',\n          background: \"lightgreen\",\n          marginBottom: \"2rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 190,\n          padding: 5\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, res.description), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, res.price)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        outline: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return addItem(res);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"+ Add To Cart\"))));\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 12\n      }\n    }, \" No Drinks\");\n  }\n}\n\n_s(Drinks, \"2IiZu96LzC4KzwsvR/Bt1ejWkMs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Drinks;\nexport default Drinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drinks\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/drinks.js"],"names":["React","useRouter","gql","useQuery","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","useState","useContext","AppContext","Drinks","restId","addItem","GET_RESTAURANT_DRINKS","variables","id","loading","error","data","message","restaurant","drinks","map","res","padding","margin","color","background","marginBottom","height","image","url","name","description","price"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\r\nimport { useState, useContext } from \"react\";\r\nimport AppContext from \"./context\";\r\n\r\nfunction Drinks({ restId }) {\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_RESTAURANT_DRINKS = gql`\r\n    query($id: ID!) {\r\n      restaurant(id: $id) {\r\n        id\r\n        name\r\n        drinks {\r\n          id\r\n          name\r\n          description\r\n          price\r\n          image {\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DRINKS, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading drink...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  if (!data) return <p>No drinks found</p>;\r\n\r\n  let restaurant = data.restaurant;\r\n  if (restId > 0) {\r\n    return (\r\n      <>\r\n        {restaurant.drinks &&\r\n          restaurant.drinks.map((res) => (\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 1 }} key={res.id}>\r\n              <Card style={{ margin: \"10px 10px\", color:'blue', background: \"lightgreen\", marginBottom: \"2rem\"  }}>\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 190, padding: 5,}}\r\n                  src={`http://localhost:1337${res.image.url}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                  <CardText>{res.price}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\" >\r\n                  <Button\r\n                    outline\r\n                    color=\"primary\"\r\n                    onClick={() => addItem(res)}\r\n                  >\r\n                    + Add To Cart\r\n                  </Button>\r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n      </>\r\n    );\r\n  } else {\r\n    return <h1> No Drinks</h1>;\r\n  }\r\n}\r\nexport default Drinks;\r\n"]},"metadata":{},"sourceType":"module"}