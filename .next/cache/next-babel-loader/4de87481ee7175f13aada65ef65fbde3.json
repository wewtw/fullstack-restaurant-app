{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState(0);\n  const {\n    0: searchInput,\n    1: setSearchInput\n  } = useState('');\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n  let searchQuery = data.restaurants.map(res => _objectSpread(_objectSpread({}, res), {}, {\n    dishes: res.dishes.filter(dish => dish.name.toLowerCase().includes(searchInput.toLowerCase())),\n    drinks: res.drinks.filter(drink => drink.name.toLowerCase().includes(searchInput.toLowerCase()))\n  })).filter(res => res.dishes.length > 0 || res.drinks.length > 0 || res.name.toLowerCase().includes(searchInput.toLowerCase()));\n  const restId = restaurantID;\n\n  const handleRestaurantClick = res => {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  }; // define renderer for Dishes\n\n\n  const renderDishes = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find(res => res.id === restId);\n    if (!restaurant) return null;\n    return __jsx(Dishes, {\n      restId: restId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderDrinks = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find(res => res.id === restId);\n    if (!restaurant) return null;\n    return __jsx(Drinks, {\n      restId: restId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const restList = searchQuery.map(res => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    key: res.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    style: {\n      margin: \"0 0.5rem 20px 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 200\n    },\n    src: `http://localhost:1337` + res.image.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, res.description)), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    color: res.id === restaurantID ? \"secondary\" : \"info\",\n    onClick: () => handleRestaurantClick(res),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, res.name)), res.showDishes && __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Dishes:\"), __jsx(Dishes, {\n    dishes: res.dishes,\n    restId: res.id,\n    search: props.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  })), res.showDrinks && __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Drinks:\"), __jsx(Drinks, {\n    drinks: res.drinks,\n    restId: res.id,\n    search: props.search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  })))));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, restList));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","restaurantID","setRestaurantID","searchInput","setSearchInput","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","map","res","dishes","filter","dish","name","toLowerCase","includes","drinks","drink","length","restId","handleRestaurantClick","id","renderDishes","restaurant","find","renderDrinks","restList","margin","height","image","url","description","showDishes","search","showDrinks"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const [searchInput, setSearchInput] = useState('');\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  let searchQuery = data.restaurants\n    .map((res) => ({\n      ...res,\n      dishes: res.dishes.filter((dish) =>\n        dish.name.toLowerCase().includes(searchInput.toLowerCase())\n      ),\n      drinks: res.drinks.filter((drink) =>\n        drink.name.toLowerCase().includes(searchInput.toLowerCase())\n      )\n    }))\n    .filter(\n      (res) =>\n        res.dishes.length > 0 ||\n        res.drinks.length > 0 ||\n        res.name.toLowerCase().includes(searchInput.toLowerCase())\n    );\n\n  const restId = restaurantID;\n\n  const handleRestaurantClick = (res) => {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  };\n\n  // define renderer for Dishes\n  const renderDishes = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find((res) => res.id === restId);\n    if (!restaurant) return null;\n    return <Dishes restId={restId} />;\n  };\n  const renderDrinks = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find((res) => res.id === restId);\n    if (!restaurant) return null;\n    return <Drinks restId={restId} />;\n  };\n\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + res.image.url}\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button\n            color={res.id === restaurantID ? \"secondary\" : \"info\"}\n            onClick={() => handleRestaurantClick(res)}          >\n            {res.name}\n          </Button>\n        </div>\n        {res.showDishes && (\n          <CardBody>\n            <CardTitle>Dishes:</CardTitle>\n            <Dishes\n              dishes={res.dishes}\n              restId={res.id}\n              search={props.search}\n            />\n          </CardBody>\n        )}\n        {res.showDrinks && (\n          <CardBody>\n            <CardTitle>Drinks:</CardTitle>\n            <Drinks\n              drinks={res.drinks}\n              restId={res.id}\n              search={props.search}\n            />\n          </CardBody>\n        )}\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n\n         \n"]},"metadata":{},"sourceType":"module"}