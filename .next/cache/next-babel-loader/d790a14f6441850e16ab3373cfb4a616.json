{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\drinks.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query($id: ID!) {\\n      restaurant(id: $id) {\\n        id\\n        name\\n        drinks {\\n          id\\n          name\\n          description\\n          price\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Col, Card, CardImg, CardBody, CardTitle, CardText, Button } from \"reactstrap\";\nimport { AppContext } from \"./context\";\n\nvar Drinks = function Drinks(_ref) {\n  _s();\n\n  var restId = _ref.restId,\n      searchQuery = _ref.searchQuery;\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DRINKS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANT_DRINKS, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"No drinks found\");\n  var drinks = data.restaurant.drinks.filter(function (drink) {\n    return drink.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  return __jsx(React.Fragment, null, drinks.map(function (drink) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: drink.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + drink.image.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }\n    }, drink.name), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, drink.description), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, \"$\", drink.price), __jsx(Button, {\n      onClick: function onClick() {\n        return addItem(drink);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Add to cart\"))));\n  }));\n};\n\n_s(Drinks, \"2IiZu96LzC4KzwsvR/Bt1ejWkMs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Drinks;\nexport default Drinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drinks\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/drinks.js"],"names":["useContext","useQuery","gql","Col","Card","CardImg","CardBody","CardTitle","CardText","Button","AppContext","Drinks","restId","searchQuery","addItem","GET_RESTAURANT_DRINKS","variables","id","loading","error","data","drinks","restaurant","filter","drink","name","toLowerCase","includes","map","margin","height","image","url","description","price"],"mappings":"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","sourcesContent":["import { useContext } from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport { Col, Card, CardImg, CardBody, CardTitle, CardText, Button } from \"reactstrap\";\r\nimport { AppContext } from \"./context\";\r\n\r\nconst Drinks = ({ restId, searchQuery }) => {\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_RESTAURANT_DRINKS = gql`\r\n    query($id: ID!) {\r\n      restaurant(id: $id) {\r\n        id\r\n        name\r\n        drinks {\r\n          id\r\n          name\r\n          description\r\n          price\r\n          image {\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DRINKS, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>No drinks found</p>;\r\n\r\n  const drinks = data.restaurant.drinks.filter(\r\n    (drink) => drink.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {drinks.map((drink) => (\r\n        <Col xs=\"6\" sm=\"4\" key={drink.id}>\r\n          <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\r\n            <CardImg\r\n              top={true}\r\n              style={{ height: 200 }}\r\n              src={`http://localhost:1337` + drink.image.url}\r\n            />\r\n            <CardBody>\r\n              <CardTitle>{drink.name}</CardTitle>\r\n              <CardText>{drink.description}</CardText>\r\n              <CardText>${drink.price}</CardText>\r\n              <Button onClick={() => addItem(drink)}>Add to cart</Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Drinks;\r\n"]},"metadata":{},"sourceType":"module"}