{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          name\\n          description\\n          price\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.map(function (restaurant) {\n    return _objectSpread(_objectSpread({}, restaurant), {}, {\n      dishes: restaurant.dishes.filter(function (dish) {\n        return dish.name.toLowerCase().includes(props.search);\n      }),\n      drinks: restaurant.drinks.filter(function (drink) {\n        return drink.name.toLowerCase().includes(props.search);\n      })\n    });\n  });\n\n  var handleRestaurantClick = function handleRestaurantClick(id) {\n    var restaurant = searchQuery.find(function (res) {\n      return res.id === id;\n    });\n\n    if (restaurant) {\n      setRestaurantID(id);\n    } else {\n      setRestaurantID(0);\n    }\n  };\n\n  var restId = searchQuery.length > 0 ? searchQuery[0].id : null; // definet renderer for Dishes\n\n  var renderDishes = function renderDishes() {\n    if (restaurantID === 0) return null;\n    var restaurant = searchQuery.find(function (res) {\n      return res.id === restaurantID;\n    });\n    if (!restaurant) return null;\n    return __jsx(Dishes, {\n      dishes: restaurant.dishes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 10\n      }\n    });\n  };\n\n  var renderDrinks = function renderDrinks() {\n    if (restaurantID === 0) return null;\n    var restaurant = searchQuery.find(function (res) {\n      return res.id === restaurantID;\n    });\n    if (!restaurant) return null;\n    return __jsx(Drinks, {\n      drinks: restaurant.drinks,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 10\n      }\n    });\n  };\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 5\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\" + res.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }\n      }, __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      }, res.name))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 5\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }, restList), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }\n    }, renderDishes(restaurantID)), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }\n    }, renderDrinks(restaurantID)));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 10\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s(RestaurantList, \"l1Ak/LzRian4lZrHyfOjQOP3flU=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useState","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","map","restaurant","dishes","filter","dish","name","toLowerCase","includes","search","drinks","drink","handleRestaurantClick","id","find","res","restId","length","renderDishes","renderDrinks","restList","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import {gql,useQuery} from '@apollo/client';\nimport Dishes from \"./dishes\"\nimport {useContext, useState} from 'react';\nimport Drinks from \"./drinks\";\n\nimport AppContext from \"./context\"\n\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col} from \"reactstrap\";\n\n\nfunction RestaurantList(props){\n  const[restaurantID, setRestaurantID] = useState(0)\n  \n  const {cart } = useContext(AppContext);\n  const [state, setState] = useState(cart)\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          name\n          description\n          price\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS)\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`)\n\n\n  const searchQuery = data.restaurants.map((restaurant) => {\n    return {\n      ...restaurant,\n      dishes: restaurant.dishes.filter((dish) =>\n        dish.name.toLowerCase().includes(props.search)\n      ),\n      drinks: restaurant.drinks.filter((drink) =>\n        drink.name.toLowerCase().includes(props.search)\n      ),\n    };\n  });\n  \n  const handleRestaurantClick = (id) => {\n    const restaurant = searchQuery.find((res) => res.id === id);\n    if (restaurant) {\n      setRestaurantID(id);\n    } else {\n      setRestaurantID(0);\n    }\n  };\n  \n\n  const restId = searchQuery.length > 0 ? searchQuery[0].id : null;\n\n \n// definet renderer for Dishes\nconst renderDishes = () => {\n  if (restaurantID === 0) return null;\n  const restaurant = searchQuery.find((res) => res.id === restaurantID);\n  if (!restaurant) return null;\n  return <Dishes dishes={restaurant.dishes} />;\n};\n\nconst renderDrinks = () => {\n  if (restaurantID === 0) return null;\n  const restaurant = searchQuery.find((res) => res.id === restaurantID);\n  if (!restaurant) return null;\n  return <Drinks drinks={restaurant.drinks} />;\n};\n\n\nif(searchQuery.length > 0){\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={\n          `http://localhost:1337`+ res.image.url\n          }\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n        \n        <Button color=\"info\" onClick={()=> setRestaurantID(res.id)}>{res.name}</Button>\n         \n        </div>\n      </Card>\n    </Col>\n  ))\n\n  return(\n\n    <Container>\n    <Row xs='3'>\n      {restList}\n    </Row>\n  \n    <Row xs='3'>\n    {renderDishes(restaurantID)}\n    </Row>\n    \n    <Row xs='3'>\n    {renderDrinks(restaurantID)}\n    </Row>\n \n    </Container>\n \n  )\n} else {\n  return <h1> No Restaurants Found</h1>\n}\n}\n   export default RestaurantList;"]},"metadata":{},"sourceType":"module"}