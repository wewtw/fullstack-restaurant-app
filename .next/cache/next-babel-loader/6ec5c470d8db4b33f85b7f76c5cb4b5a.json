{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = restaurant => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    const dishe = selectedRestaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    return __jsx(Col, {\n      xs: \"12\",\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 5\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, \"Dishes\"), dish.length === 0 && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 29\n      }\n    }, \"No dishes found\"), dish.map(dish => __jsx(\"div\", {\n      key: dish.id,\n      className: dish.name.toLowerCase().includes(props.search) ? 'highlight' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, __jsx(Dishes, {\n      dish: dish,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }))));\n  };\n\n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    const drink = selectedRestaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    return __jsx(Col, {\n      xs: \"12\",\n      md: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }\n    }, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, \"Drinks\"), drink.length === 0 && __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 30\n      }\n    }, \"No drinks found\"), drink.map(drink => __jsx(\"div\", {\n      key: drink.id,\n      className: drink.name.toLowerCase().includes(props.search) ? 'highlight' : '',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(Drinks, {\n      drink: drink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }))));\n  };\n\n  const searchQuery = data.restaurants.filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    return matchedDishes.length > 0 || matchedDrinks.length > 0 || matchedRestaurant;\n  });\n  const restList = searchQuery.map(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search.toLowerCase()));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search.toLowerCase()));\n    const isMatched = matchedDishes.length > 0 || matchedDrinks.length > 0;\n    const cardStyle = isMatched ? {\n      backgroundColor: '#ffc107'\n    } : {};\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: restaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      style: _objectSpread({\n        margin: \"0 0.5rem 20px 0.5rem\"\n      }, cardStyle),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337${restaurant.image.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, restaurant.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, restaurant.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n      onClick: () => handleRestaurantClick(restaurant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }\n  }, renderDishes()), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, renderDrinks()));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","handleRestaurantClick","restaurant","id","renderDishes","dishe","dishes","filter","dish","name","toLowerCase","includes","search","length","map","renderDrinks","drink","drinks","searchQuery","matchedDishes","matchedDrinks","matchedRestaurant","restList","isMatched","cardStyle","backgroundColor","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = (restaurant) => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n  \n\n  const renderDishes = () => {\n  if (!selectedRestaurant) return null;\n  const dishe = selectedRestaurant.dishes.filter((dish) =>\n    dish.name.toLowerCase().includes(props.search)\n  );\n  return (\n    <Col xs=\"12\" md=\"6\">\n      <h3>Dishes</h3>\n      {dish.length === 0 && <p>No dishes found</p>}\n      {dish.map((dish) => (\n        <div\n          key={dish.id}\n          className={dish.name.toLowerCase().includes(props.search) ? 'highlight' : ''}\n        >\n          <Dishes dish={dish} />\n        </div>\n      ))}\n    </Col>\n  );\n};\n\nconst renderDrinks = () => {\n  if (!selectedRestaurant) return null;\n  const drink = selectedRestaurant.drinks.filter((drink) =>\n    drink.name.toLowerCase().includes(props.search)\n  );\n  return (\n    <Col xs=\"12\" md=\"6\">\n      <h3>Drinks</h3>\n      {drink.length === 0 && <p>No drinks found</p>}\n      {drink.map((drink) => (\n        <div\n          key={drink.id}\n          className={drink.name.toLowerCase().includes(props.search) ? 'highlight' : ''}\n        >\n          <Drinks drink={drink} />\n        </div>\n      ))}\n    </Col>\n  );\n};\n\n\n  const searchQuery = data.restaurants.filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    return matchedDishes.length > 0 || matchedDrinks.length > 0 || matchedRestaurant;\n  });\n  \n\n  const restList = searchQuery.map((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    const isMatched = matchedDishes.length > 0 || matchedDrinks.length > 0;\n    const cardStyle = isMatched ? { backgroundColor: '#ffc107' } : {};\n  \n    return (\n      <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\", ...cardStyle }}>\n          <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337${restaurant.image.url}`}\n          />\n          <CardBody>\n            <CardTitle>{restaurant.name}</CardTitle>\n            <CardText>{restaurant.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color={selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\"}\n              onClick={() => handleRestaurantClick(restaurant)}\n            >\n              {selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"}\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    );\n  });\n  \n  \n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n      <Row xs=\"3\">{renderDishes()}</Row>\n      <Row xs=\"3\">{renderDrinks()}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}