{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          price\\n          name\\n          description\\n          \\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState = useState(cart),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState2 = useState(null),\n      selectedRestaurant = _useState2[0],\n      setSelectedRestaurant = _useState2[1];\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n\n  var handleRestaurantClick = function handleRestaurantClick(restaurant) {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  var searchQuery = data.restaurants.filter(function (restaurant) {\n    return restaurant.dishes.some(function (dish) {\n      return dish.name.toLowerCase().includes(props.search.toLowerCase());\n    }) || restaurant.drinks.some(function (drink) {\n      return drink.name.toLowerCase().includes(props.search.toLowerCase());\n    });\n  });\n\n  if (searchQuery.length === 0) {\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 10\n      }\n    }, \"No restaurants found\");\n  }\n\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 3\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, searchQuery.map(function (restaurant) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: restaurant.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 250,\n        width: \"100%\",\n        display: \"block\"\n      },\n      src: \"\".concat(process.env.REACT_APP_BACKEND_URL).concat(restaurant.image.url),\n      alt: restaurant.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 15\n      }\n    }, restaurant.name), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 15\n      }\n    }, restaurant.description), __jsx(Button, {\n      onClick: function onClick() {\n        return handleRestaurantClick(restaurant);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Hide Menu\" : \"View Menu\"), selectedRestaurant && selectedRestaurant.id === restaurant.id && __jsx(React.Fragment, null, __jsx(Dishes, {\n      dishes: restaurant.dishes,\n      setState: setState,\n      state: state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 19\n      }\n    }), __jsx(Drinks, {\n      drinks: restaurant.drinks,\n      setState: setState,\n      state: state,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 19\n      }\n    })))));\n  })));\n}\n\n_s(RestaurantList, \"raNtfS0oO2lpYzhTWm2n3V5pkVE=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","handleRestaurantClick","restaurant","id","searchQuery","filter","dishes","some","dish","name","toLowerCase","includes","search","drinks","drink","length","map","margin","height","width","display","process","env","REACT_APP_BACKEND_URL","image","url","description"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,QAA1C,EAAoDC,SAApD,EAA+DC,GAA/D,EAAoEC,SAApE,EAA+EC,GAA/E,QAA0F,YAA1F;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAAA;;AAAA,oBACZhB,UAAU,CAACK,UAAD,CADE;AAAA,MACrBY,IADqB,eACrBA,IADqB;;AAAA,kBAEHlB,QAAQ,CAACkB,IAAD,CAFL;AAAA,MAEtBC,KAFsB;AAAA,MAEfC,QAFe;;AAG7B,MAAMC,eAAe,GAAGnB,GAAH,mBAArB;;AAH6B,kBA4BIC,QAAQ,CAACkB,eAAD,CA5BZ;AAAA,MA4BrBC,OA5BqB,aA4BrBA,OA5BqB;AAAA,MA4BZC,KA5BY,aA4BZA,KA5BY;AAAA,MA4BLC,IA5BK,aA4BLA,IA5BK;;AAAA,mBA6BuBxB,QAAQ,CAAC,IAAD,CA7B/B;AAAA,MA6BtByB,kBA7BsB;AAAA,MA6BFC,qBA7BE;;AA+B7B,MAAIJ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACb,MAAIC,KAAJ,EAAW;AAACI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AAAoB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAAqB;;AACrD,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACXG,EAAAA,OAAO,CAACC,GAAR,uBAA2BJ,IAAI,CAACK,WAAhC;;AAEA,MAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,UAAD,EAAgB;AAC5C,QAAIN,kBAAkB,IAAIA,kBAAkB,CAACO,EAAnB,KAA0BD,UAAU,CAACC,EAA/D,EAAmE;AACjEN,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,KAFD,MAEO;AACLA,MAAAA,qBAAqB,CAACK,UAAD,CAArB;AACD;AACF,GAND;;AAOA,MAAME,WAAW,GAAGT,IAAI,CAACK,WAAL,CAAiBK,MAAjB,CAAwB,UAACH,UAAD;AAAA,WAC5CA,UAAU,CAACI,MAAX,CAAkBC,IAAlB,CACE,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCvB,KAAK,CAACwB,MAAN,CAAaF,WAAb,EAAjC,CAAV;AAAA,KADF,KAGAR,UAAU,CAACW,MAAX,CAAkBN,IAAlB,CACE,UAACO,KAAD;AAAA,aAAWA,KAAK,CAACL,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCvB,KAAK,CAACwB,MAAN,CAAaF,WAAb,EAAlC,CAAX;AAAA,KADF,CAJ4C;AAAA,GAAxB,CAApB;;AASF,MAAIN,WAAW,CAACW,MAAZ,KAAuB,CAA3B,EAA8B;AAC5B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;AACD;;AAED,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,WAAW,CAACY,GAAZ,CAAgB,UAACd,UAAD;AAAA,WACf,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AAAmB,MAAA,GAAG,EAAEA,UAAU,CAACC,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEc,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,GAAG,EAAE,IADP;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,GADH;AAELC,QAAAA,KAAK,EAAE,MAFF;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAFT;AAOE,MAAA,GAAG,YAAKC,OAAO,CAACC,GAAR,CAAYC,qBAAjB,SAAyCrB,UAAU,CAACsB,KAAX,CAAiBC,GAA1D,CAPL;AAQE,MAAA,GAAG,EAAEvB,UAAU,CAACO,IARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAWE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYP,UAAU,CAACO,IAAvB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWP,UAAU,CAACwB,WAAtB,CAFF,EAGE,MAAC,MAAD;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMzB,qBAAqB,CAACC,UAAD,CAA3B;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGN,kBAAkB,IAAIA,kBAAkB,CAACO,EAAnB,KAA0BD,UAAU,CAACC,EAA3D,GACG,WADH,GAEG,WAHN,CAHF,EAQGP,kBAAkB,IAAIA,kBAAkB,CAACO,EAAnB,KAA0BD,UAAU,CAACC,EAA3D,IACC,4BACE,MAAC,MAAD;AACE,MAAA,MAAM,EAAED,UAAU,CAACI,MADrB;AAEE,MAAA,QAAQ,EAAEf,QAFZ;AAGE,MAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,MAAC,MAAD;AACE,MAAA,MAAM,EAAEY,UAAU,CAACW,MADrB;AAEE,MAAA,QAAQ,EAAEtB,QAFZ;AAGE,MAAA,KAAK,EAAED,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CATJ,CAXF,CADF,CADe;AAAA,GAAhB,CADH,CADF,CADF;AA6Ce;;GArGNH,c;UA4B0Bb,Q;;;KA5B1Ba,c;AAuGT,eAAeA,cAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = (restaurant) => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n  const searchQuery = data.restaurants.filter((restaurant) =>\n  restaurant.dishes.some(\n    (dish) => dish.name.toLowerCase().includes(props.search.toLowerCase())\n  ) ||\n  restaurant.drinks.some(\n    (drink) => drink.name.toLowerCase().includes(props.search.toLowerCase())\n  )\n);\n\nif (searchQuery.length === 0) {\n  return <p>No restaurants found</p>;\n}\n\nreturn (\n  <Container>\n    <Row>\n      {searchQuery.map((restaurant) => (\n        <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n          <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n            <CardImg\n              top={true}\n              style={{\n                height: 250,\n                width: \"100%\",\n                display: \"block\",\n              }}\n              src={`${process.env.REACT_APP_BACKEND_URL}${restaurant.image.url}`}\n              alt={restaurant.name}\n            />\n            <CardBody>\n              <CardTitle>{restaurant.name}</CardTitle>\n              <CardText>{restaurant.description}</CardText>\n              <Button onClick={() => handleRestaurantClick(restaurant)}>\n                {selectedRestaurant && selectedRestaurant.id === restaurant.id\n                  ? \"Hide Menu\"\n                  : \"View Menu\"}\n              </Button>\n              {selectedRestaurant && selectedRestaurant.id === restaurant.id && (\n                <>\n                  <Dishes\n                    dishes={restaurant.dishes}\n                    setState={setState}\n                    state={state}\n                  />\n                  <Drinks\n                    drinks={restaurant.drinks}\n                    setState={setState}\n                    state={state}\n                  />\n                </>\n              )}\n            </CardBody>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  </Container>\n);\n              }\n\nexport default RestaurantList;"]},"metadata":{},"sourceType":"module"}