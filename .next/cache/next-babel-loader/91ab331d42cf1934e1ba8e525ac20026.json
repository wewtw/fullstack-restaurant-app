{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const {\n    0: selectedDishes,\n    1: setSelectedDishes\n  } = useState([]);\n  const {\n    0: selectedDrinks,\n    1: setSelectedDrinks\n  } = useState([]);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = restaurant => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n      setSelectedDishes([]);\n      setSelectedDrinks([]);\n    }\n  };\n\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDishes = selectedRestaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    if (props.search && !filteredDishes.length) return null;\n    return __jsx(Dishes, {\n      dishes: selectedDishes.length ? selectedDishes : filteredDishes,\n      restId: selectedRestaurant.id,\n      setSelectedDishes: setSelectedDishes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDrinks = selectedRestaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    if (props.search && !filteredDrinks.length) return null;\n    return __jsx(Drinks, {\n      drinks: selectedDrinks.length ? selectedDrinks : filteredDrinks,\n      restId: selectedRestaurant.id,\n      setSelectedDrinks: setSelectedDrinks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const restList = data.restaurants.filter(restaurant => {\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search)).length > 0;\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search)).length > 0;\n\n    if (props.search) {\n      return matchedRestaurant || matchedDishes || matchedDrinks;\n    }\n\n    return true;\n  }).map(restaurant => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    key: restaurant.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    style: {\n      margin: \"0 0.5rem 20px 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 200\n    },\n    src: `http://localhost:1337` + restaurant.image.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, restaurant.name), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, restaurant.description)), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n    onClick: () => handleRestaurantClick(restaurant),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\")))));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, renderDishes()), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, renderDrinks()));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","selectedDishes","setSelectedDishes","selectedDrinks","setSelectedDrinks","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","handleRestaurantClick","restaurant","id","renderDishes","filteredDishes","dishes","filter","dish","name","toLowerCase","includes","search","length","renderDrinks","filteredDrinks","drinks","drink","restList","matchedRestaurant","matchedDishes","matchedDrinks","map","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const [selectedDishes, setSelectedDishes] = useState([]);\n  const [selectedDrinks, setSelectedDrinks] = useState([]);\n\n\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = (restaurant) => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n      setSelectedDishes([]);\n      setSelectedDrinks([]);\n    }\n  };\n  \n  \n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDishes = selectedRestaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    if (props.search && !filteredDishes.length) return null;\n    return <Dishes dishes={selectedDishes.length ? selectedDishes : filteredDishes} restId={selectedRestaurant.id} setSelectedDishes={setSelectedDishes} />;\n  };\n    \n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDrinks = selectedRestaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    if (props.search && !filteredDrinks.length) return null;\n    return <Drinks drinks={selectedDrinks.length ? selectedDrinks : filteredDrinks} restId={selectedRestaurant.id} setSelectedDrinks={setSelectedDrinks} />;\n  };\n  \n  \n  const restList = data.restaurants.filter((restaurant) => {\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    const matchedDishes = restaurant.dishes.filter((dish) => dish.name.toLowerCase().includes(props.search)).length > 0;\n    const matchedDrinks = restaurant.drinks.filter((drink) => drink.name.toLowerCase().includes(props.search)).length > 0;\n    \n    if (props.search) {\n      return matchedRestaurant || matchedDishes || matchedDrinks;\n    }\n    return true;\n  }).map((restaurant) => (\n    <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + restaurant.image.url}\n        />\n        <CardBody>\n          <CardTitle>{restaurant.name}</CardTitle>\n          <CardText>{restaurant.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button\n            color={selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\"}\n            onClick={() => handleRestaurantClick(restaurant)}\n          >\n            {selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"}\n          </Button>\n        </div>\n      </Card>\n    </Col>\n  ));\n  \n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n      <Row xs=\"3\">{renderDishes()}</Row>\n      <Row xs=\"3\">{renderDrinks()}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}