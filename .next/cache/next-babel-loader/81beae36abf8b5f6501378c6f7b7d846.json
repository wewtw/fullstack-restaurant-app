{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query GetRestaurants {\\n        restaurants {\\n          id\\n          name\\n          description\\n          image {\\n            url\\n          }\\n          dishes {\\n            id\\n            name\\n            description\\n            price\\n          }\\n          drinks {\\n            id\\n            price\\n            name\\n            description\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  _s2();\n\n  var _s = $RefreshSig$(),\n      _this2 = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  function RestaurantList(props) {\n    _s();\n\n    var _this = this;\n\n    var _useState3 = useState(0),\n        restaurantID = _useState3[0],\n        setRestaurantID = _useState3[1];\n\n    var _useContext2 = useContext(AppContext),\n        cart = _useContext2.cart;\n\n    var _useState4 = useState(cart),\n        state = _useState4[0],\n        setState = _useState4[1];\n\n    var GET_RESTAURANTS = gql(_templateObject());\n\n    var _useQuery = useQuery(GET_RESTAURANTS, {\n      variables: {\n        id: restaurantID\n      }\n    }),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n    if (loading) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n\n    if (error) {\n      console.log(error);\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 14\n        }\n      }, \"ERROR\");\n    }\n\n    if (!data) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 23\n      }\n    }, \"Not found\");\n    console.log(\"Query Data: \".concat(JSON.stringify(data.restaurants, null, 2)));\n    var searchQuery = data.restaurants.map(function (res) {\n      if (res.id === restaurantID) {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          dishes: res.dishes.filter(function (dish) {\n            return dish.name.toLowerCase().includes(props.search);\n          }),\n          drinks: res.drinks.filter(function (drink) {\n            return drink.name.toLowerCase().includes(props.search);\n          })\n        });\n      } else {\n        return _objectSpread(_objectSpread({}, res), {}, {\n          dishes: res.dishes.filter(function (dish) {\n            return dish.name.toLowerCase().includes(props.search);\n          }),\n          drinks: res.drinks.filter(function (drink) {\n            return drink.name.toLowerCase().includes(props.search);\n          }),\n          showDishes: false,\n          showDrinks: false\n        });\n      }\n    }).filter(function (res) {\n      return res.dishes.length + res.drinks.length > 0;\n    });\n    console.log(\"Search Query: \".concat(JSON.stringify(searchQuery, null, 2)));\n    var restId = restaurantID;\n\n    var handleRestaurantClick = function handleRestaurantClick(res) {\n      if (res.id === restaurantID) {\n        setRestaurantID(0); // if already selected, deselect\n      } else {\n        setRestaurantID(res.id);\n      }\n    }; // define renderer for Dishes\n\n\n    var renderDishes = function renderDishes() {\n      if (restId === 0) return null;\n      var restaurant = data.restaurants.find(function (res) {\n        return res.id === restId;\n      });\n      if (!restaurant) return null;\n      console.log(\"Dishes: \".concat(JSON.stringify(restaurant.dishes, null, 2)));\n      return __jsx(Dishes, {\n        restaurant: restaurant,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 14\n        }\n      });\n    };\n\n    var renderDrinks = function renderDrinks() {\n      if (restId === 0) return null;\n      var restaurant = data.restaurants.find(function (res) {\n        return res.id === restId;\n      });\n      if (!restaurant) return null;\n      console.log(\"Drinks: \".concat(JSON.stringify(restaurant.drinks, null, 2)));\n      return __jsx(Drinks, {\n        restaurant: restaurant,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 14\n        }\n      });\n    };\n  }\n\n  _s(RestaurantList, \"AG1Od7CGruCtgOneqAeKWk/inGw=\", false, function () {\n    return [useQuery];\n  });\n\n  var restList = searchQuery.map(function (res) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + res.image.url,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, __jsx(CardText, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: res.id === restaurantID ? \"secondary\" : \"info\",\n      onClick: function onClick() {\n        return handleRestaurantClick(res);\n      },\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, res.name))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, restList));\n}\n\n_s2(RestaurantList, \"aFTb0nc+JV1Bwcien9M/KAg7dfg=\");\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","variables","id","loading","error","data","console","log","JSON","stringify","restaurants","searchQuery","map","res","dishes","filter","dish","name","toLowerCase","includes","search","drinks","drink","showDishes","showDrinks","length","restId","handleRestaurantClick","renderDishes","restaurant","find","renderDrinks","restList","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  function RestaurantList(props) {\n    const [restaurantID, setRestaurantID] = useState(0);\n    const { cart } = useContext(AppContext);\n    const [state, setState] = useState(cart);\n    const GET_RESTAURANTS = gql`\n      query GetRestaurants {\n        restaurants {\n          id\n          name\n          description\n          image {\n            url\n          }\n          dishes {\n            id\n            name\n            description\n            price\n          }\n          drinks {\n            id\n            price\n            name\n            description\n          }\n        }\n      }\n    `;\n  \n    const { loading, error, data } = useQuery(GET_RESTAURANTS, {\n      variables: { id: restaurantID },\n    });\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) {\n      console.log(error);\n      return <p>ERROR</p>;\n    }\n    if (!data) return <p>Not found</p>;\n    console.log(`Query Data: ${JSON.stringify(data.restaurants, null, 2)}`);\n  \n    let searchQuery = data.restaurants\n      .map((res) => {\n        if (res.id === restaurantID) {\n          return {\n            ...res,\n            dishes: res.dishes.filter((dish) =>\n              dish.name.toLowerCase().includes(props.search)\n            ),\n            drinks: res.drinks.filter((drink) =>\n              drink.name.toLowerCase().includes(props.search)\n            ),\n          };\n        } else {\n          return {\n            ...res,\n            dishes: res.dishes.filter((dish) =>\n              dish.name.toLowerCase().includes(props.search)\n            ),\n            drinks: res.drinks.filter((drink) =>\n              drink.name.toLowerCase().includes(props.search)\n            ),\n            showDishes: false,\n            showDrinks: false,\n          };\n        }\n      })\n      .filter((res) => res.dishes.length + res.drinks.length > 0);\n  \n    console.log(`Search Query: ${JSON.stringify(searchQuery, null, 2)}`);\n  \n    const restId = restaurantID;\n  \n    const handleRestaurantClick = (res) => {\n      if (res.id === restaurantID) {\n        setRestaurantID(0); // if already selected, deselect\n      } else {\n        setRestaurantID(res.id);\n      }\n    };\n  \n    // define renderer for Dishes\n    const renderDishes = () => {\n      if (restId === 0) return null;\n      const restaurant = data.restaurants.find((res) => res.id === restId);\n      if (!restaurant) return null;\n      console.log(`Dishes: ${JSON.stringify(restaurant.dishes, null, 2)}`);\n      return <Dishes restaurant={restaurant} />;\n    };\n  \n    const renderDrinks = () => {\n      if (restId === 0) return null;\n      const restaurant = data.restaurants.find((res) => res.id === restId);\n      if (!restaurant) return null;\n      console.log(`Drinks: ${JSON.stringify(restaurant.drinks, null, 2)}`);\n      return <Drinks restaurant={restaurant} />;\n    };\n  \n  }\n\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + res.image.url}\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button\n            color={res.id === restaurantID ? \"secondary\" : \"info\"}\n            onClick={() => handleRestaurantClick(res)}\n          >\n            {res.name}\n          </Button>\n        </div>\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}