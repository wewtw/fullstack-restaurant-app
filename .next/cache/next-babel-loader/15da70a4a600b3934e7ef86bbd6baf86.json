{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const {\n    0: filter,\n    1: setFilter\n  } = useState({\n    priceRange: \"all\"\n  }); // create state for filter values\n\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n\n  const handleRestaurantClick = restaurant => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  }; // add filter function to searchQuery\n\n\n  const searchQuery = data.restaurants.filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search.toLowerCase()));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search.toLowerCase()));\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  }).filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => {\n      if (filter.priceRange === \"all\") {\n        return true;\n      } else if (filter.priceRange === \"under10\") {\n        return dish.price < 10;\n      } else if (filter.priceRange === \"10to20\") {\n        return dish.price >= 10 && dish.price <= 20;\n      } else {\n        return dish.price > 20;\n      }\n    });\n    const matchedDrinks = restaurant.drinks.filter(drink => {\n      if (filter.priceRange === \"all\") {\n        return true;\n      } else if (filter.priceRange === \"under10\") {\n        return drink.price < 10;\n      } else if (filter.priceRange === \"10to20\") {\n        return drink.price >= 10 && drink.price <= 20;\n      } else {\n        return drink.price > 20;\n      }\n    });\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  });\n  const restList = searchQuery.map(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search.toLowerCase()));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search.toLowerCase()));\n    return __jsx(Col, {\n      key: restaurant.id,\n      xs: \"6\",\n      sm: \"4\",\n      md: \"3\",\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      onClick: () => handleRestaurantClick(restaurant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: `${process.env.REACT_APP_BACKEND_URL}${restaurant.image.url}`,\n      alt: restaurant.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, restaurant.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, restaurant.description))), selectedRestaurant && selectedRestaurant.id === restaurant.id && __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Dishes:\"), __jsx(Dishes, {\n      dishes: matchedDishes,\n      restaurant: restaurant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), __jsx(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Drinks:\"), __jsx(Drinks, {\n      drinks: matchedDrinks,\n      restaurant: restaurant,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    })));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, restList));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","filter","setFilter","priceRange","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","handleRestaurantClick","restaurant","id","searchQuery","restaurants","matchedDishes","dishes","dish","name","toLowerCase","includes","search","matchedDrinks","drinks","drink","length","price","restList","map","process","env","REACT_APP_BACKEND_URL","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const [filter, setFilter] = useState({ priceRange: \"all\" }); // create state for filter values\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n\n  const handleRestaurantClick = (restaurant) => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  // add filter function to searchQuery\n  const searchQuery = data.restaurants.filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  }).filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) => {\n      if (filter.priceRange === \"all\") {\n        return true;\n      } else if (filter.priceRange === \"under10\") {\n        return dish.price < 10;\n      } else if (filter.priceRange === \"10to20\") {\n        return dish.price >= 10 && dish.price <= 20;\n      } else {\n        return dish.price > 20;\n      }\n    });\n    const matchedDrinks = restaurant.drinks.filter((drink) => {\n      if (filter.priceRange === \"all\") {\n        return true;\n      } else if (filter.priceRange === \"under10\") {\n        return drink.price < 10;\n      } else if (filter.priceRange === \"10to20\") {\n        return drink.price >= 10 && drink.price <= 20;\n      } else {\n        return drink.price > 20;\n      }\n    });\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  });\n\n  const restList = searchQuery.map((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n\n    return (\n      <Col key={restaurant.id} xs=\"6\" sm=\"4\" md=\"3\" className=\"mb-3\">\n        <Card onClick={() => handleRestaurantClick(restaurant)}>\n          <CardImg\n            top\n            width=\"100%\"\n            src={`${process.env.REACT_APP_BACKEND_URL}${restaurant.image.url}`}\n            alt={restaurant.name}\n          />\n          <CardBody>\n            <CardTitle>{restaurant.name}</CardTitle>\n            <CardText>{restaurant.description}</CardText>\n          </CardBody>\n        </Card>\n        {selectedRestaurant && selectedRestaurant.id === restaurant.id && (\n          <div>\n            <h4>Dishes:</h4>\n            <Dishes dishes={matchedDishes} restaurant={restaurant} />\n            <h4>Drinks:</h4>\n            <Drinks drinks={matchedDrinks} restaurant={restaurant} />\n          </div>\n        )}\n      </Col>\n    );\n  });\n      \n      return (\n      <Container>\n      <Row>{restList}</Row>\n      </Container>\n      );\n      }\n      \n      export default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}