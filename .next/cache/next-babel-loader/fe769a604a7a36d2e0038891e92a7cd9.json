{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\orders.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from \"@apollo/client\";\nconst GET_ORDERS = gql`\n  query {\n    orders(where: { user: { id: { eq: \"CURRENT_USER_ID\" } } }) {\n      id\n      items {\n        id\n        name\n        price\n        quantity\n      }\n      total\n      status\n    }\n  }\n`;\n\nfunction Orders() {\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ORDERS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  const orders = data.orders;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Orders\"), orders.map(order => __jsx(\"div\", {\n    key: order.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, \"Order ID: \", order.id), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Total: \", order.total), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Status: \", order.status), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, order.items.map(item => __jsx(\"li\", {\n    key: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, item.name, \" x \", item.quantity, \" - $\", item.price))))));\n}\n\nexport default Orders;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/orders.js"],"names":["gql","useQuery","GET_ORDERS","Orders","loading","error","data","message","orders","map","order","id","total","status","items","item","name","quantity","price"],"mappings":";;;AAAA,SAASA,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;;AAgBA,SAASG,MAAT,GAAkB;AAChB,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BL,QAAQ,CAACC,UAAD,CAAzC;AAEA,MAAIE,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACE,OAAjB,CAAP;AAEX,QAAMC,MAAM,GAAGF,IAAI,CAACE,MAApB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGA,MAAM,CAACC,GAAP,CAAYC,KAAD,IACV;AAAK,IAAA,GAAG,EAAEA,KAAK,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAcD,KAAK,CAACC,EAApB,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWD,KAAK,CAACE,KAAjB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAYF,KAAK,CAACG,MAAlB,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,KAAN,CAAYL,GAAZ,CAAiBM,IAAD,IACf;AAAI,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,QADtB,UACoCF,IAAI,CAACG,KADzC,CADD,CADH,CAJF,CADD,CAFH,CADF;AAmBD;;AACD,eAAef,MAAf","sourcesContent":["import { gql, useQuery } from \"@apollo/client\";\r\n\r\nconst GET_ORDERS = gql`\r\n  query {\r\n    orders(where: { user: { id: { eq: \"CURRENT_USER_ID\" } } }) {\r\n      id\r\n      items {\r\n        id\r\n        name\r\n        price\r\n        quantity\r\n      }\r\n      total\r\n      status\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Orders() {\r\n  const { loading, error, data } = useQuery(GET_ORDERS);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n\r\n  const orders = data.orders;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Orders</h1>\r\n      {orders.map((order) => (\r\n        <div key={order.id}>\r\n          <p>Order ID: {order.id}</p>\r\n          <p>Total: {order.total}</p>\r\n          <p>Status: {order.status}</p>\r\n          <ul>\r\n            {order.items.map((item) => (\r\n              <li key={item.id}>\r\n                {item.name} x {item.quantity} - ${item.price}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\nexport default Orders;"]},"metadata":{},"sourceType":"module"}