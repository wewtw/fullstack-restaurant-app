{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          price\\n          name\\n          description\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(null),\n      selectedRestaurant = _useState[0],\n      setSelectedRestaurant = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var searchQuery = data.restaurants.map(function (restaurant) {\n    var filteredDishes = restaurant.dishes.filter(function (dish) {\n      return dish.name.toLowerCase().includes(props.search.toLowerCase());\n    });\n    var filteredDrinks = restaurant.drinks.filter(function (drink) {\n      return drink.name.toLowerCase().includes(props.search.toLowerCase());\n    });\n    return _objectSpread(_objectSpread({}, restaurant), {}, {\n      dishes: filteredDishes,\n      drinks: filteredDrinks\n    });\n  });\n\n  var handleRestaurantClick = function handleRestaurantClick(restaurant) {\n    setSelectedRestaurant(restaurant);\n  };\n\n  var renderDishes = function renderDishes() {\n    if (!selectedRestaurant) return null;\n    return __jsx(Dishes, {\n      restId: selectedRestaurant.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderDrinks = function renderDrinks() {\n    if (!selectedRestaurant) return null;\n    return __jsx(Drinks, {\n      restId: selectedRestaurant.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderRestaurants = function renderRestaurants() {\n    return searchQuery.map(function (restaurant) {\n      var hasFilteredItems = restaurant.dishes.length > 0 || restaurant.drinks.length > 0;\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: restaurant.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\".concat(restaurant.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }\n      }, restaurant.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }\n      }, restaurant.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, __jsx(Button, {\n        color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n        onClick: function onClick() {\n          return handleRestaurantClick(restaurant);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, restaurant.name)), hasFilteredItems && __jsx(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }\n      }, __jsx(Button, {\n        color: selectedRestaurant && selectedRestaurant.id === restaurant.id && selectedRestaurant.showDishes ? \"secondary\" : \"info\",\n        onClick: function onClick() {\n          return setSelectedRestaurant(_objectSpread(_objectSpread({}, selectedRestaurant), {}, {\n            showDishes: !selectedRestaurant.showDishes\n          }));\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }\n      }, \"Show Drinks\"))));\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, renderRestaurants()), __jsx(Col, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, renderDishes(), renderDrinks()))));\n}\n\n_s(RestaurantList, \"CrPmvuCRIAaBHl5hX6yma1tMxv8=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","selectedRestaurant","setSelectedRestaurant","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","searchQuery","restaurants","map","restaurant","filteredDishes","dishes","filter","dish","name","toLowerCase","includes","search","filteredDrinks","drinks","drink","handleRestaurantClick","renderDishes","id","renderDrinks","renderRestaurants","hasFilteredItems","length","margin","height","image","url","description","showDishes"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n\n  const searchQuery = data.restaurants.map((restaurant) => {\n    const filteredDishes = restaurant.dishes.filter((dish) => {\n      return dish.name.toLowerCase().includes(props.search.toLowerCase());\n    });\n    const filteredDrinks = restaurant.drinks.filter((drink) => {\n      return drink.name.toLowerCase().includes(props.search.toLowerCase());\n    });\n\n    return {\n      ...restaurant,\n      dishes: filteredDishes,\n      drinks: filteredDrinks,\n    }\n  });\n\n  const handleRestaurantClick = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    return <Dishes restId={selectedRestaurant.id} />;\n  };\n\n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    return <Drinks restId={selectedRestaurant.id} />;\n  };\n\n  const renderRestaurants = () => {\n    return searchQuery.map((restaurant) => {\n      const hasFilteredItems = restaurant.dishes.length > 0 || restaurant.drinks.length > 0;\n\n      return (\n        <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n          <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n            <CardImg\n              top={true}\n              style={{ height: 200 }}\n              src={`http://localhost:1337${restaurant.image.url}`}\n            />\n            <CardBody>\n              <CardTitle>{restaurant.name}</CardTitle>\n              <CardText>{restaurant.description}</CardText>\n            </CardBody>\n            <div className=\"card-footer\">\n              <Button\n                color={selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\"}\n                onClick={() => handleRestaurantClick(restaurant)}\n              >\n                {restaurant.name}\n              </Button>\n            </div>\n            {hasFilteredItems && (\n              <div>\n                <Button\n                  color={selectedRestaurant && selectedRestaurant.id === restaurant.id && selectedRestaurant.showDishes ? \"secondary\" : \"info\"}\n                  onClick={() => setSelectedRestaurant({...selectedRestaurant, showDishes: !selectedRestaurant.showDishes})}\n                >\n                  Show Drinks\n                </Button>\n              </div>\n            )}\n          </Card>\n        </Col>\n      );\n    });\n  };\n\n  return (\n    <div>\n      <Container fluid>\n        <Row>\n          <Col xs=\"3\">\n            {renderRestaurants()}\n          </Col>\n          <Col xs=\"3\">\n            {renderDishes()}\n            {renderDrinks()}\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}