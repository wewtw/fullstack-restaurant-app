{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes({\n  restId,\n  searchQuery\n}) {\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n      query($id: ID!) {\n        restaurant(id: $id) {\n          id\n          name\n          dishes {\n            id\n            name\n            description\n            price\n            image {\n              url\n            }\n          }\n        }\n      }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Error!\");\n  const dishes = data.restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"Search dishes\",\n    value: searchQuery,\n    onChange: e => setSearchQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, dishes.map(dish => __jsx(Col, {\n    md: \"4\",\n    key: dish.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, __jsx(Card, {\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    width: \"100%\",\n    src: dish.image.url,\n    alt: dish.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, dish.name), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 19\n    }\n  }, dish.description), __jsx(Button, {\n    onClick: () => addItem(dish),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, \"Add to cart ($\", dish.price, \")\")))))));\n}\n\nexport default Dishes;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","searchQuery","addItem","GET_RESTAURANT_DISHES","loading","error","data","variables","id","dishes","restaurant","filter","dish","name","toLowerCase","includes","e","setSearchQuery","target","value","map","image","url","description","price"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n  function Dishes({restId, searchQuery}) {\n    const {addItem} = useContext(AppContext)\n  \n    const GET_RESTAURANT_DISHES = gql`\n      query($id: ID!) {\n        restaurant(id: $id) {\n          id\n          name\n          dishes {\n            id\n            name\n            description\n            price\n            image {\n              url\n            }\n          }\n        }\n      }\n    `;\n  \n    const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n      variables: { id: restId },\n    });\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error!</p>;\n  \n    const dishes = data.restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  \n    return (\n      <>\n        <Input\n          type=\"text\"\n          placeholder=\"Search dishes\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <Row>\n          {dishes.map((dish) => (\n            <Col md=\"4\" key={dish.id}>\n              <Card className=\"mb-4\">\n                <CardImg top width=\"100%\" src={dish.image.url} alt={dish.name} />\n                <CardBody>\n                  <CardTitle>{dish.name}</CardTitle>\n                  <CardText>{dish.description}</CardText>\n                  <Button onClick={() => addItem(dish)}>Add to cart (${dish.price})</Button>\n                </CardBody>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </>\n      \n    );\n\n    \n  }\n        \n  \nexport default Dishes"]},"metadata":{},"sourceType":"module"}