{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const {\n    0: filteredRestaurants,\n    1: setFilteredRestaurants\n  } = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n\n  try {\n    if (loading) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Loading...\");\n    if (error) throw new Error(error);\n    if (!data) return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 23\n      }\n    }, \"Not found\");\n    console.log(`Query Data: ${data.restaurants}`);\n    useEffect(() => {\n      const newFilteredRestaurants = data.restaurants.filter(restaurant => {\n        const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n        const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n        return matchedDishes.length > 0 || matchedDrinks.length > 0;\n      });\n      setFilteredRestaurants(newFilteredRestaurants);\n    }, [data, props.search]);\n  } catch (error) {\n    console.error(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 12\n      }\n    }, \"Something went wrong...\");\n  }\n\n  const handleRestaurantClick = restaurant => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    return __jsx(Dishes, {\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    return __jsx(Drinks, {\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderMenu = menu => {\n    if (!selectedRestaurant) return null;\n    return menu === \"dishes\" ? __jsx(Dishes, {\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 32\n      }\n    }) : __jsx(Drinks, {\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 76\n      }\n    });\n  };\n\n  const searchQuery = filteredRestaurants.filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  });\n  const restList = searchQuery.map(restaurant => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    key: restaurant.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    style: {\n      margin: \"0.5rem 20px 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 200\n    },\n    src: `http://localhost:1337 + restaurant.image.url`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 1\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }\n  }, restaurant.name), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 1\n    }\n  }, restaurant.description)), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }\n  }, __jsx(Button, {\n    color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n    onClick: () => handleRestaurantClick(restaurant),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }\n  }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\")))));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 1\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 1\n    }\n  }, renderDishes()), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 1\n    }\n  }, renderDrinks()));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","useEffect","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","filteredRestaurants","setFilteredRestaurants","loading","error","data","selectedRestaurant","setSelectedRestaurant","Error","console","log","restaurants","newFilteredRestaurants","filter","restaurant","matchedDishes","dishes","dish","name","toLowerCase","includes","search","matchedDrinks","drinks","drink","length","handleRestaurantClick","renderDishes","id","renderDrinks","renderMenu","menu","searchQuery","restList","map","margin","height","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const [filteredRestaurants, setFilteredRestaurants] = useState([]);\n\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  try {\n    if (loading) return <p>Loading...</p>;\n    if (error) throw new Error(error);\n    if (!data) return <p>Not found</p>;\n    console.log(`Query Data: ${data.restaurants}`);\n\n    useEffect(() => {\n      const newFilteredRestaurants = data.restaurants.filter((restaurant) => {\n        const matchedDishes = restaurant.dishes.filter((dish) =>\n          dish.name.toLowerCase().includes(props.search)\n        );\n        const matchedDrinks = restaurant.drinks.filter((drink) =>\n          drink.name.toLowerCase().includes(props.search)\n        );\n        return matchedDishes.length > 0 || matchedDrinks.length > 0;\n      });\n      setFilteredRestaurants(newFilteredRestaurants);\n    }, [data, props.search]);\n\n  } catch (error) {\n    console.error(error);\n    return <p>Something went wrong...</p>;\n  }\n\n  const handleRestaurantClick = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    return <Dishes restId={selectedRestaurant.id} />;\n  };\n\n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    return <Drinks restId={selectedRestaurant.id} />;\n  };\n\n  const renderMenu = (menu) => {\n    if (!selectedRestaurant) return null;\n    return menu === \"dishes\" ? <Dishes restId={selectedRestaurant.id} /> : <Drinks restId={selectedRestaurant.id} />;\n  };\n\n  const searchQuery = filteredRestaurants.filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  });\n\n  const restList =  searchQuery.map((restaurant) => (\n    <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n      <Card style={{ margin: \"0.5rem 20px 0.5rem\" }}>\n<CardImg\ntop={true}\nstyle={{ height: 200 }}\nsrc={`http://localhost:1337 + restaurant.image.url`}/>\n<CardBody>\n<CardTitle>{restaurant.name}</CardTitle>\n<CardText>{restaurant.description}</CardText>\n</CardBody>\n<div className=\"card-footer\">\n<Button\ncolor={selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\"}\nonClick={() => handleRestaurantClick(restaurant)}\n>\n{selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"}\n</Button>\n</div>\n</Card>\n</Col>\n));\n\nreturn (\n<Container>\n<Row xs=\"3\">{restList}</Row>\n<Row xs=\"3\">{renderDishes()}</Row>\n<Row xs=\"3\">{renderDrinks()}</Row>\n</Container>\n);\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}