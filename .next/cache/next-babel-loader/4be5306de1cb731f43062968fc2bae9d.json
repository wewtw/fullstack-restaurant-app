{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\drinks.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      drink {\\n        id\\n        price\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\n\nfunction Drinks(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DRINKS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANT_DRINKS, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }\n  }, \"Loading drink...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, \"No drinks found\");\n  var restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, restaurant.drinks.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 15\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 150,\n          width: 150\n        },\n        src: \"http://localhost:1337\".concat(res.image.url),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }\n      }, __jsx(CardTitle, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 19\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 19\n        }\n      }, res.description), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 19\n        }\n      }, res.price)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        outline: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return addItem(res);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, \"+ Add To Cart\"))));\n    }));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 18\n      }\n    }, \" No Drinks\");\n  }\n}\n\n_s(Drinks, \"2IiZu96LzC4KzwsvR/Bt1ejWkMs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Drinks;\nexport default Drinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drinks\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/drinks.js"],"names":["React","useRouter","gql","useQuery","Card","CardBody","CardTitle","CardSubtitle","useState","useContext","AppContext","Drinks","restId","addItem","GET_RESTAURANT_DRINKS","variables","id","loading","error","data","message","restaurant","drinks","map","res","padding","margin","height","width","image","url","name","description","price"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,YAAxD;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAEA,SAASC,MAAT,OAA4B;AAAA;;AAAA;;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAAA,oBACNH,UAAU,CAACC,UAAD,CADJ;AAAA,MAClBG,OADkB,eAClBA,OADkB;;AAG1B,MAAMC,qBAAqB,GAAGZ,GAAH,mBAA3B;;AAH0B,kBAsBOC,QAAQ,CAACW,qBAAD,EAAwB;AAC/DC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEJ;AAAN;AADoD,GAAxB,CAtBf;AAAA,MAsBlBK,OAtBkB,aAsBlBA,OAtBkB;AAAA,MAsBTC,KAtBS,aAsBTA,KAtBS;AAAA,MAsBFC,IAtBE,aAsBFA,IAtBE;;AA0B1B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AAEX,MAAIE,UAAU,GAAGF,IAAI,CAACE,UAAtB;;AACA,MAAIT,MAAM,GAAG,CAAb,EAAe;AAEb,WACE,4BACKS,UAAU,CAACC,MAAX,CAAkBC,GAAlB,CAAsB,UAACC,GAAD;AAAA,aACrB,MAAC,GAAD;AAAK,QAAA,EAAE,EAAC,GAAR;AAAY,QAAA,EAAE,EAAC,GAAf;AAAmB,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAA1B;AAA0C,QAAA,GAAG,EAAED,GAAG,CAACR,EAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEU,UAAAA,MAAM,EAAE;AAAV,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,OAAD;AACE,QAAA,GAAG,EAAE,IADP;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE,GAAV;AAAeC,UAAAA,KAAK,EAAC;AAArB,SAFT;AAGE,QAAA,GAAG,iCAA0BJ,GAAG,CAACK,KAAJ,CAAUC,GAApC,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAYN,GAAG,CAACO,IAAhB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWP,GAAG,CAACQ,WAAf,CAFF,EAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWR,GAAG,CAACS,KAAf,CAHF,CANF,EAWE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AACE,QAAA,OAAO,MADT;AAEE,QAAA,KAAK,EAAC,SAFR;AAGE,QAAA,OAAO,EAAI;AAAA,iBAAKpB,OAAO,CAACW,GAAD,CAAZ;AAAA,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAXF,CADF,CADqB;AAAA,KAAtB,CADL,CADF;AA6BM,GA/BR,MAgCU;AACF,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD;AACJ;;GAlEIb,M;UAsB0BR,Q;;;KAtB1BQ,M;AAmET,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport {useRouter} from \"next/router\"\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport AppContext from \"./context\";\r\n\r\nfunction Drinks({ restId }) {\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_RESTAURANT_DRINKS = gql`\r\n  query($id: ID!) {\r\n    restaurant(id: $id) {\r\n      id\r\n      name\r\n      drink {\r\n        id\r\n        price\r\n        name\r\n        description\r\n        image {\r\n          url\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DRINKS, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading drink...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  if (!data) return <p>No drinks found</p>;\r\n\r\n  let restaurant = data.restaurant;\r\n  if (restId > 0){\r\n\r\n    return (\r\n      <>\r\n          {restaurant.drinks.map((res) => (\r\n            <Col xs=\"6\" sm=\"4\" style={{ padding: 0 }} key={res.id}>\r\n              <Card style={{ margin: \"0 10px\" }}>\r\n                <CardImg\r\n                  top={true}\r\n                  style={{ height: 150, width:150 }}\r\n                  src={`http://localhost:1337${res.image.url}`}\r\n                />\r\n                <CardBody>\r\n                  <CardTitle>{res.name}</CardTitle>\r\n                  <CardText>{res.description}</CardText>\r\n                  <CardText>{res.price}</CardText>\r\n                </CardBody>\r\n                <div className=\"card-footer\">\r\n                  <Button \r\n                    outline\r\n                    color=\"primary\"\r\n                    onClick = {()=> addItem(res)}\r\n                  >\r\n                    + Add To Cart\r\n                  </Button>\r\n                  \r\n                </div>\r\n              </Card>\r\n            </Col>\r\n          ))}\r\n        </>\r\n        )}\r\n        else{\r\n          return <h1> No Drinks</h1>\r\n        }\r\n    }\r\nexport default Drinks;\r\n"]},"metadata":{},"sourceType":"module"}