{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\drinks.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query($id: ID!) {\\n      restaurant(id: $id) {\\n        id\\n        name\\n        drinks {\\n          id\\n          name\\n          description\\n          price\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\n\nfunction Drinks(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId;\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_DRINKS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_DRINKS, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, \"Loading drinks...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"No drinks found\");\n  var drinksData = data.restaurant.drinks;\n\n  if (drinksData.length === 0) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"No drinks available at this restaurant\");\n  }\n\n  var drinksList = drinksData.map(function (drink) {\n    return __jsx(Card, {\n      key: drink.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }\n    }, __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(CardTitle, {\n      tag: \"h5\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, drink.name), __jsx(CardSubtitle, {\n      tag: \"h6\",\n      className: \"mb-2 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, drink.description), __jsx(CardSubtitle, {\n      tag: \"h6\",\n      className: \"mb-2 text-muted\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, drink.price)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, __jsx(Button, {\n      outline: true,\n      color: \"primary\",\n      onClick: function onClick() {\n        return addItem(drink);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"+ Add To Cart\")));\n  });\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, drinksList);\n}\n\n_s(Drinks, \"2IiZu96LzC4KzwsvR/Bt1ejWkMs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Drinks;\nexport default Drinks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Drinks\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/drinks.js"],"names":["React","gql","useQuery","Card","CardBody","CardTitle","CardSubtitle","useState","useContext","AppContext","Drinks","restId","addItem","GET_DRINKS","variables","id","loading","error","data","message","drinksData","restaurant","drinks","length","drinksList","map","drink","name","description","price"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,YAAxD;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAEA,SAASC,MAAT,OAA4B;AAAA;;AAAA;;AAAA,MAAVC,MAAU,QAAVA,MAAU;;AAAA,oBACNH,UAAU,CAACC,UAAD,CADJ;AAAA,MAClBG,OADkB,eAClBA,OADkB;;AAG1B,MAAMC,UAAU,GAAGZ,GAAH,mBAAhB;;AAH0B,kBAkBOC,QAAQ,CAACW,UAAD,EAAa;AACpDC,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEJ;AAAN;AADyC,GAAb,CAlBf;AAAA,MAkBlBK,OAlBkB,aAkBlBA,OAlBkB;AAAA,MAkBTC,KAlBS,aAkBTA,KAlBS;AAAA,MAkBFC,IAlBE,aAkBFA,IAlBE;;AAsB1B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACE,OAAjB,CAAP;AACX,MAAI,CAACD,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AAEX,MAAIE,UAAU,GAAGF,IAAI,CAACG,UAAL,CAAgBC,MAAjC;;AAEA,MAAIF,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AACD;;AAED,MAAMC,UAAU,GAAGJ,UAAU,CAACK,GAAX,CAAe,UAACC,KAAD;AAAA,WAChC,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,KAAK,CAACX,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqBW,KAAK,CAACC,IAA3B,CADF,EAEE,MAAC,YAAD;AAAc,MAAA,GAAG,EAAC,IAAlB;AAAuB,MAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,KAAK,CAACE,WADT,CAFF,EAKE,MAAC,YAAD;AAAc,MAAA,GAAG,EAAC,IAAlB;AAAuB,MAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACG,KADT,CALF,CADF,EAUE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AAAQ,MAAA,OAAO,MAAf;AAAgB,MAAA,KAAK,EAAC,SAAtB;AAAgC,MAAA,OAAO,EAAE;AAAA,eAAMjB,OAAO,CAACc,KAAD,CAAb;AAAA,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAVF,CADgC;AAAA,GAAf,CAAnB;AAmBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,UAAN,CAAP;AACD;;GApDQd,M;UAkB0BR,Q;;;KAlB1BQ,M;AAsDT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport AppContext from \"./context\";\r\n\r\nfunction Drinks({ restId }) {\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_DRINKS = gql`\r\n    query($id: ID!) {\r\n      restaurant(id: $id) {\r\n        id\r\n        name\r\n        drinks {\r\n          id\r\n          name\r\n          description\r\n          price\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_DRINKS, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading drinks...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  if (!data) return <p>No drinks found</p>;\r\n\r\n  let drinksData = data.restaurant.drinks;\r\n\r\n  if (drinksData.length === 0) {\r\n    return <h1>No drinks available at this restaurant</h1>;\r\n  }\r\n\r\n  const drinksList = drinksData.map((drink) => (\r\n    <Card key={drink.id}>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">{drink.name}</CardTitle>\r\n        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n          {drink.description}\r\n        </CardSubtitle>\r\n        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n          {drink.price}\r\n        </CardSubtitle>\r\n      </CardBody>\r\n      <div className=\"card-footer\">\r\n        <Button outline color=\"primary\" onClick={() => addItem(drink)}>\r\n          + Add To Cart\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  ));\r\n\r\n  return <div>{drinksList}</div>;\r\n}\r\n\r\nexport default Drinks;\r\n"]},"metadata":{},"sourceType":"module"}