{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          price\\n          name\\n          description\\n          \\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState = useState(cart),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState2 = useState(null),\n      selectedRestaurant = _useState2[0],\n      setSelectedRestaurant = _useState2[1];\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n\n  var handleRestaurantClick = function handleRestaurantClick(restaurant) {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  var renderDishes = function renderDishes() {\n    if (!selectedRestaurant) return null;\n    return selectedRestaurant.dishes.map(function (dish) {\n      return __jsx(Dishes, {\n        key: dish.id,\n        restId: selectedRestaurant.id,\n        dish: dish,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      });\n    });\n  };\n\n  var renderDrinks = function renderDrinks() {\n    if (!selectedRestaurant) return null;\n    return selectedRestaurant.drinks.map(function (drink) {\n      return __jsx(Drinks, {\n        key: drink.id,\n        restId: selectedRestaurant.id,\n        drink: drink,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 5\n        }\n      });\n    });\n  };\n\n  var searchQuery = data.restaurants.map(function (restaurant) {\n    var matchedDishes = restaurant.dishes.filter(function (dish) {\n      return dish.name.toLowerCase().includes(props.search);\n    });\n    var matchedDrinks = restaurant.drinks.filter(function (drink) {\n      return drink.name.toLowerCase().includes(props.search);\n    });\n    return _objectSpread(_objectSpread({}, restaurant), {}, {\n      dishes: matchedDishes,\n      drinks: matchedDrinks\n    });\n  }).filter(function (restaurant) {\n    return restaurant.dishes.length > 0 || restaurant.drinks.length > 0 || restaurant.name.toLowerCase().includes(props.search);\n  });\n  var restList = searchQuery.map(function (restaurant) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: restaurant.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + restaurant.image.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, restaurant.name), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, restaurant.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n      onClick: function onClick() {\n        return handleRestaurantClick(restaurant);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, restList));\n}\n\n_s(RestaurantList, \"raNtfS0oO2lpYzhTWm2n3V5pkVE=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","handleRestaurantClick","restaurant","id","renderDishes","dishes","map","dish","renderDrinks","drinks","drink","searchQuery","matchedDishes","filter","name","toLowerCase","includes","search","matchedDrinks","length","restList","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = (restaurant) => {\n  if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n    setSelectedRestaurant(null);\n  } else {\n    setSelectedRestaurant(restaurant);\n  }\n};\n\n\nconst renderDishes = () => {\n  if (!selectedRestaurant) return null;\n  return selectedRestaurant.dishes.map((dish) => (\n    <Dishes key={dish.id} restId={selectedRestaurant.id} dish={dish} />\n  ));\n};\n\nconst renderDrinks = () => {\n  if (!selectedRestaurant) return null;\n  return selectedRestaurant.drinks.map((drink) => (\n    <Drinks key={drink.id} restId={selectedRestaurant.id} drink={drink} />\n  ));\n};\n\n\n  const searchQuery = data.restaurants.map((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    return {\n      ...restaurant,\n      dishes: matchedDishes,\n      drinks: matchedDrinks,\n    };\n  }).filter((restaurant) => {\n    return restaurant.dishes.length > 0 || restaurant.drinks.length > 0 || restaurant.name.toLowerCase().includes(props.search);\n  });\n  \n  \n\n  const restList = searchQuery.map((restaurant) => (\n    <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + restaurant.image.url}\n        />\n        <CardBody>\n          <CardTitle>{restaurant.name}</CardTitle>\n          <CardText>{restaurant.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button\n            color={selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\"}\n            onClick={() => handleRestaurantClick(restaurant)}\n          >\n            {selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"}\n          </Button>\n        </div>\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n    \n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}