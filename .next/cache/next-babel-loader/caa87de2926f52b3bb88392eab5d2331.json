{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { getUserFromLocalStorage } from \"../components/auth\"; //importing the getUserFromLocalStorage function to get the currently logged in user. step-1.\n\nfunction Receipts() {\n  const {\n    0: orders,\n    1: setOrders\n  } = useState([]); // will store list of orders. step-2\n\n  const API_URL = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:1337\"; //set up the api url. step-3.\n  //last good no errors.\n\n  useEffect(() => {\n    //hook to fetch the orders data from the Strapi API, using the logged in user's ID as a query parameter.step-4.\n    const fetchData = async () => {\n      try {\n        const user = getUserFromLocalStorage();\n\n        if (!user) {\n          console.log(\"User not found\");\n          return;\n        }\n\n        const response = await fetch(`${API_URL}/orders?user=${user.id}`, {\n          headers: {\n            Authorization: `Bearer ${user.jwt}`\n          }\n        });\n        const data = await response.json();\n        setOrders(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []); ///map orders. step-5.\n  //divded the amount by 100 to fix to a dollar.\n  ///added a new status field. admin can set status in the panel. \n  //next step make a new page just for workers who can set status to shiped or delivered.   \n\n  return __jsx(\"div\", {\n    style: {\n      marginBottom: \"2rem\"\n    }\n  }, __jsx(\"h1\", {\n    style: {\n      fontSize: \"2rem\",\n      marginBottom: \"1rem\",\n      marginTop: \"1rem\"\n    }\n  }, \"Order History\"), orders.map((order, index) => __jsx(\"div\", {\n    key: order.id,\n    style: {\n      fontSize: \"1.5rem\",\n      border: \"1px solid #ccc\",\n      background: \"white\",\n      padding: \"1rem\",\n      marginBottom: index === orders.length - 1 ? 0 : \"1rem\"\n    }\n  }, __jsx(\"p\", null, \"Order ID: \", order.id), __jsx(\"p\", null, \"Amount: $\", order.amount / 100), __jsx(\"p\", null, \"Status: \", order.status))));\n}\n\nexport default Receipts;","map":null,"metadata":{},"sourceType":"module"}