{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = restaurant => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    const matchedDishes = selectedRestaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search.toLowerCase()) && (!props.search || dish.name.toLowerCase().includes(props.search.toLowerCase())));\n    if (matchedDishes.length === 0) return null; // Get all dishes with the same type as the matched dish\n\n    const matchedType = matchedDishes[0].type;\n    const matchedTypeDishes = selectedRestaurant.dishes.filter(dish => dish.type === matchedType && !dish.name.toLowerCase().includes(props.search.toLowerCase()) && (!props.search || dish.name.toLowerCase().includes(props.search.toLowerCase())));\n    return __jsx(React.Fragment, null, __jsx(Dishes, {\n      dishes: matchedDishes,\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), matchedTypeDishes.length > 0 && __jsx(React.Fragment, null, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Related Dishes\"), __jsx(Dishes, {\n      dishes: matchedTypeDishes,\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    const matchedDrinks = selectedRestaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search.toLowerCase()) && (!props.search || drink.name.toLowerCase().includes(props.search.toLowerCase())));\n    if (matchedDrinks.length === 0) return null; // Get all drinks with the same type as the matched drink\n\n    const matchedType = matchedDrinks[0].type;\n    const matchedTypeDrinks = selectedRestaurant.drinks.filter(drink => drink.type === matchedType && !drink.name.toLowerCase().includes(props.search.toLowerCase()) && (!props.search || drink.name.toLowerCase().includes(props.search.toLowerCase())));\n    return __jsx(React.Fragment, null, __jsx(Drinks, {\n      drinks: matchedDrinks,\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }), matchedTypeDrinks.length > 0 && __jsx(React.Fragment, null, __jsx(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Related Drinks\"), __jsx(Drinks, {\n      drinks: matchedTypeDrinks,\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const searchQuery = data.restaurants.filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search.toLowerCase()));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search.toLowerCase()));\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  });\n  const restList = searchQuery.map(restaurant => {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: restaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337` + restaurant.image.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, restaurant.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, restaurant.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n      onClick: () => handleRestaurantClick(restaurant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Hide Menu\" : \"Show Menu\"))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, renderDishes()), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }\n  }, renderDrinks()));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","handleRestaurantClick","restaurant","id","renderDishes","matchedDishes","dishes","filter","dish","name","toLowerCase","includes","search","length","matchedType","type","matchedTypeDishes","renderDrinks","matchedDrinks","drinks","drink","matchedTypeDrinks","searchQuery","restList","map","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.log(error);\n    return <p>ERROR</p>;\n  }\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n  const handleRestaurantClick = (restaurant) => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    const matchedDishes = selectedRestaurant.dishes.filter(\n      (dish) =>\n        dish.name.toLowerCase().includes(props.search.toLowerCase()) &&\n        (!props.search ||\n          dish.name.toLowerCase().includes(props.search.toLowerCase()))\n    );\n    if (matchedDishes.length === 0) return null;\n  \n    // Get all dishes with the same type as the matched dish\n    const matchedType = matchedDishes[0].type;\n    const matchedTypeDishes = selectedRestaurant.dishes.filter(\n      (dish) =>\n        dish.type === matchedType &&\n        !dish.name.toLowerCase().includes(props.search.toLowerCase()) &&\n        (!props.search ||\n          dish.name.toLowerCase().includes(props.search.toLowerCase()))\n    );\n  \n    return (\n      <>\n        <Dishes dishes={matchedDishes} restId={selectedRestaurant.id} />\n        {matchedTypeDishes.length > 0 && (\n          <>\n            <h3>Related Dishes</h3>\n            <Dishes dishes={matchedTypeDishes} restId={selectedRestaurant.id} />\n          </>\n        )}\n      </>\n    );\n  };\n  \n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    const matchedDrinks = selectedRestaurant.drinks.filter(\n      (drink) =>\n        drink.name.toLowerCase().includes(props.search.toLowerCase()) &&\n        (!props.search ||\n          drink.name.toLowerCase().includes(props.search.toLowerCase()))\n    );\n    if (matchedDrinks.length === 0) return null;\n  \n    // Get all drinks with the same type as the matched drink\n    const matchedType = matchedDrinks[0].type;\n    const matchedTypeDrinks = selectedRestaurant.drinks.filter(\n      (drink) =>\n        drink.type === matchedType &&\n        !drink.name.toLowerCase().includes(props.search.toLowerCase()) &&\n        (!props.search ||\n          drink.name.toLowerCase().includes(props.search.toLowerCase()))\n    );\n  \n    return (\n      <>\n        <Drinks drinks={matchedDrinks} restId={selectedRestaurant.id} />\n        {matchedTypeDrinks.length > 0 && (\n          <>\n            <h3>Related Drinks</h3>\n            <Drinks drinks={matchedTypeDrinks} restId={selectedRestaurant.id} />\n          </>\n        )}\n      </>\n    );\n  };\n  const searchQuery = data.restaurants.filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    return matchedDishes.length > 0 || matchedDrinks.length > 0;\n  });\n  \n\n  const restList = searchQuery.map((restaurant) => {\n    return (\n      <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + restaurant.image.url}\n          />\n          <CardBody>\n            <CardTitle>{restaurant.name}</CardTitle>\n            <CardText>{restaurant.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color={\n                selectedRestaurant && selectedRestaurant.id === restaurant.id\n                  ? \"secondary\"\n                  : \"info\"\n              }\n              onClick={() => handleRestaurantClick(restaurant)}\n            >\n              {selectedRestaurant && selectedRestaurant.id === restaurant.id\n                ? \"Hide Menu\"\n                : \"Show Menu\"}\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    );\n  });\n  \n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n      <Row xs=\"3\">{renderDishes()}</Row>\n      <Row xs=\"3\">{renderDrinks()}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}