{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($searchQuery: String) {\\n    restaurants(where: { \\n      name_contains: $searchQuery,\\n      OR: [\\n        { dishes: { name_contains: $searchQuery } },\\n        { drinks: { name_contains: $searchQuery } }\\n      ]\\n    }) {\\n      id\\n      name\\n      description\\n      image {\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from './dishes';\nimport Drinks from './drinks';\nimport AppContext from './context';\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from 'reactstrap';\nimport { useState, useContext, useEffect } from 'react';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(props.search),\n      searchQuery = _useState[0],\n      setSearchQuery = _useState[1];\n\n  var _useState2 = useState(0),\n      restaurantID = _useState2[0],\n      setRestaurantID = _useState2[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState3 = useState(cart),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  useEffect(function () {\n    setSearchQuery(props.search);\n  }, [props.search]);\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS, {\n    variables: {\n      searchQuery: searchQuery\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var searchResults = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(searchQuery);\n  });\n  var restId = searchResults.length > 0 ? searchResults[0].id : 0; // define renderer for Dishes\n\n  var renderDishes = function renderDishes(restaurantID) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 12\n      }\n    }, \" \");\n  };\n\n  var renderDrinks = function renderDrinks(restaurantID) {\n    return __jsx(Drinks, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    }, \" \");\n  };\n\n  if (searchResults.length > 0) {\n    var restList = searchResults.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: '0 0.5rem 20px 0.5rem'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\" + res.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, res.name))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }, restList), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, renderDishes(restaurantID)), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, renderDrinks(restaurantID)));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s(RestaurantList, \"aUxSa1nEJ1Kux/af/vuhFLBPGRs=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","useState","useContext","useEffect","RestaurantList","props","search","searchQuery","setSearchQuery","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","variables","loading","error","data","searchResults","restaurants","filter","res","name","toLowerCase","includes","restId","length","id","renderDishes","renderDrinks","restList","map","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport Dishes from './dishes';\nimport Drinks from './drinks';\nimport AppContext from './context';\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from 'reactstrap';\nimport { useState, useContext, useEffect } from 'react';\n\nfunction RestaurantList(props) {\n  const [searchQuery, setSearchQuery] = useState(props.search);\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n\n  useEffect(() => {\n    setSearchQuery(props.search);\n  }, [props.search]);\n\n  const GET_RESTAURANTS = gql`\n  query($searchQuery: String) {\n    restaurants(where: { \n      name_contains: $searchQuery,\n      OR: [\n        { dishes: { name_contains: $searchQuery } },\n        { drinks: { name_contains: $searchQuery } }\n      ]\n    }) {\n      id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\n\nconst { loading, error, data } = useQuery(GET_RESTAURANTS, {\n  variables: { searchQuery },\n});\n\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n\n  const searchResults = data.restaurants.filter((res) => {\n    return res.name.toLowerCase().includes(searchQuery);\n  });\n\n  const restId = searchResults.length > 0 ? searchResults[0].id : 0;\n\n  // define renderer for Dishes\n  const renderDishes = (restaurantID) => {\n    return <Dishes restId={restaurantID}> </Dishes>;\n  };\n  const renderDrinks = (restaurantID) => {\n    return <Drinks restId={restaurantID}> </Drinks>;\n  };\n\n  if (searchResults.length > 0) {\n    const restList = searchResults.map((res) => (\n      <Col xs='6' sm='4' key={res.id}>\n        <Card style={{ margin: '0 0.5rem 20px 0.5rem' }}>\n          <CardImg top={true} style={{ height: 200 }} src={`http://localhost:1337` + res.image.url} />\n          <CardBody>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className='card-footer'>\n            <Button color='info' onClick={() => setRestaurantID(res.id)}>\n              {res.name}\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    ));\n\n    return (\n      <Container>\n        <Row xs='3'>\n          {restList}\n          </Row>\n\n        <Row xs='3'>\n          {renderDishes(restaurantID)}\n          </Row>\n        <Row xs='3'>\n        {renderDrinks(restaurantID)}\n        </Row>\n \n    </Container>\n \n  )\n} else {\n  return <h1> No Restaurants Found</h1>\n}\n}\n   export default RestaurantList;"]},"metadata":{},"sourceType":"module"}