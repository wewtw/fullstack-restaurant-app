{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = restaurant => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDishes = selectedRestaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    if (props.search && !filteredDishes.length) return null;\n    return __jsx(Dishes, {\n      dishes: filteredDishes,\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDrinks = selectedRestaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    if (props.search && !filteredDrinks.length) return null;\n    return __jsx(Drinks, {\n      drinks: filteredDrinks,\n      restId: selectedRestaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }\n    });\n  };\n\n  const restList = data.restaurants.filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n\n    if (props.search && !matchedDishes.length && !matchedDrinks.length && !matchedRestaurant) {\n      return false;\n    }\n\n    if (selectedRestaurant && selectedRestaurant.id !== restaurant.id) {\n      return false;\n    }\n\n    if (selectedRestaurant && matchedDishes.length === 0 && matchedDrinks.length === 0) {\n      return false;\n    }\n\n    return true;\n  }).map(restaurant => {\n    const filteredDishes = (selectedRestaurant === null || selectedRestaurant === void 0 ? void 0 : selectedRestaurant.id) === restaurant.id ? restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search)) : [];\n    const filteredDrinks = (selectedRestaurant === null || selectedRestaurant === void 0 ? void 0 : selectedRestaurant.id) === restaurant.id ? restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search)) : [];\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: restaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337` + restaurant.image.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, restaurant.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, restaurant.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n      onClick: () => handleRestaurantClick(restaurant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\")), selectedRestaurant && selectedRestaurant.id === restaurant.id && __jsx(React.Fragment, null, __jsx(Dishes, {\n      dishes: filteredDishes,\n      restId: restaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }), __jsx(Drinks, {\n      drinks: filteredDrinks,\n      restId: restaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, renderDishes()), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }\n  }, renderDrinks()));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","handleRestaurantClick","restaurant","id","renderDishes","filteredDishes","dishes","filter","dish","name","toLowerCase","includes","search","length","renderDrinks","filteredDrinks","drinks","drink","restList","matchedDishes","matchedDrinks","matchedRestaurant","map","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = (restaurant) => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n  \n  const renderDishes = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDishes = selectedRestaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    if (props.search && !filteredDishes.length) return null;\n    return <Dishes dishes={filteredDishes} restId={selectedRestaurant.id} />;\n  };\n  \n  const renderDrinks = () => {\n    if (!selectedRestaurant) return null;\n    const filteredDrinks = selectedRestaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    if (props.search && !filteredDrinks.length) return null;\n    return <Drinks drinks={filteredDrinks} restId={selectedRestaurant.id} />;\n  };\n  \n  \n\n  const restList = data.restaurants.filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n  \n    if (props.search && (!matchedDishes.length && !matchedDrinks.length && !matchedRestaurant)) {\n      return false;\n    }\n  \n    if (selectedRestaurant && selectedRestaurant.id !== restaurant.id) {\n      return false;\n    }\n  \n    if (selectedRestaurant && matchedDishes.length === 0 && matchedDrinks.length === 0) {\n      return false;\n    }\n  \n    return true;\n  }).map((restaurant) => {\n    const filteredDishes = selectedRestaurant?.id === restaurant.id ?\n      restaurant.dishes.filter((dish) => dish.name.toLowerCase().includes(props.search)) : [];\n    const filteredDrinks = selectedRestaurant?.id === restaurant.id ?\n      restaurant.drinks.filter((drink) => drink.name.toLowerCase().includes(props.search)) : [];\n  \n    return (\n      <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + restaurant.image.url}\n          />\n          <CardBody>\n            <CardTitle>{restaurant.name}</CardTitle>\n            <CardText>{restaurant.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color={selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\"}\n              onClick={() => handleRestaurantClick(restaurant)}\n            >\n              {selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"}\n            </Button>\n          </div>\n          {selectedRestaurant && selectedRestaurant.id === restaurant.id && (\n            <>\n              <Dishes dishes={filteredDishes} restId={restaurant.id} />\n              <Drinks drinks={filteredDrinks} restId={restaurant.id} />\n            </>\n          )}\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n      <Row xs=\"3\">{renderDishes()}</Row>\n      <Row xs=\"3\">{renderDrinks()}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}