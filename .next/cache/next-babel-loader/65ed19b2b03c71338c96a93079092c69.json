{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 12\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = restaurant => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  const renderDishes = () => {\n    const matchedDishes = searchQuery.reduce((acc, restaurant) => {\n      const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search.toLowerCase()));\n\n      if (matchedDishes.length > 0) {\n        acc.push({\n          dishes: matchedDishes,\n          restId: restaurant.id\n        });\n      }\n\n      return acc;\n    }, []);\n    if (matchedDishes.length === 0) return null;\n    return __jsx(Dishes, {\n      dishes: matchedDishes[0].dishes,\n      restId: matchedDishes[0].restId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const renderDrinks = () => {\n    const matchedDrinks = searchQuery.reduce((acc, restaurant) => {\n      const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search.toLowerCase()));\n\n      if (matchedDrinks.length > 0) {\n        acc.push({\n          drinks: matchedDrinks,\n          restId: restaurant.id\n        });\n      }\n\n      return acc;\n    }, []);\n    if (matchedDrinks.length === 0) return null;\n    return __jsx(Drinks, {\n      drinks: matchedDrinks[0].drinks,\n      restId: matchedDrinks[0].restId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    });\n  };\n\n  const searchQuery = data.restaurants.filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    return matchedDishes.length > 0 || matchedDrinks.length > 0 || matchedRestaurant;\n  });\n  const restList = searchQuery.map(restaurant => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    key: restaurant.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 5\n    }\n  }, __jsx(Card, {\n    style: {\n      margin: \"0 0.5rem 20px 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 200\n    },\n    src: `http://localhost:1337` + restaurant.image.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, restaurant.name), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, restaurant.description)), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n    onClick: () => handleRestaurantClick(restaurant),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\")))));\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, renderDishes()), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }\n  }, renderDrinks()));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","handleRestaurantClick","restaurant","id","renderDishes","matchedDishes","searchQuery","reduce","acc","dishes","filter","dish","name","toLowerCase","includes","search","length","push","restId","renderDrinks","matchedDrinks","drinks","drink","matchedRestaurant","restList","map","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.log(error);\n    return <p>ERROR</p>;\n  }\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  const handleRestaurantClick = (restaurant) => {\n    if (selectedRestaurant && selectedRestaurant.id === restaurant.id) {\n      setSelectedRestaurant(null);\n    } else {\n      setSelectedRestaurant(restaurant);\n    }\n  };\n\n  const renderDishes = () => {\n    const matchedDishes = searchQuery.reduce((acc, restaurant) => {\n      const matchedDishes = restaurant.dishes.filter((dish) =>\n        dish.name.toLowerCase().includes(props.search.toLowerCase())\n      );\n      if (matchedDishes.length > 0) {\n        acc.push({\n          dishes: matchedDishes,\n          restId: restaurant.id,\n        });\n      }\n      return acc;\n    }, []);\n    if (matchedDishes.length === 0) return null;\n    return (\n      <Dishes\n        dishes={matchedDishes[0].dishes}\n        restId={matchedDishes[0].restId}\n      />\n    );\n  };\n  \n  const renderDrinks = () => {\n    const matchedDrinks = searchQuery.reduce((acc, restaurant) => {\n      const matchedDrinks = restaurant.drinks.filter((drink) =>\n        drink.name.toLowerCase().includes(props.search.toLowerCase())\n      );\n      if (matchedDrinks.length > 0) {\n        acc.push({\n          drinks: matchedDrinks,\n          restId: restaurant.id,\n        });\n      }\n      return acc;\n    }, []);\n    if (matchedDrinks.length === 0) return null;\n    return (\n      <Drinks\n        drinks={matchedDrinks[0].drinks}\n        restId={matchedDrinks[0].restId}\n      />\n    );\n  };\n  \n\n  const searchQuery = data.restaurants.filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    return matchedDishes.length > 0 || matchedDrinks.length > 0 || matchedRestaurant;\n  });\n\n  const restList = searchQuery.map((restaurant) => (\n    <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + restaurant.image.url}\n        />\n        <CardBody>\n          <CardTitle>{restaurant.name}</CardTitle>\n          <CardText>{restaurant.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button\n            color={\n              selectedRestaurant && selectedRestaurant.id === restaurant.id\n                ? \"secondary\"\n                : \"info\"\n            }\n            onClick={() => handleRestaurantClick(restaurant)}\n          >\n            {selectedRestaurant && selectedRestaurant.id === restaurant.id\n              ? \"Close\"\n              : \"View Menu\"}\n          </Button>\n        </div>\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n      <Row xs=\"3\">{renderDishes()}</Row>\n      <Row xs=\"3\">{renderDrinks()}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}