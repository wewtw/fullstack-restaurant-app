{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          price\\n          name\\n          description\\n          \\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useState2 = useState(''),\n      searchInput = _useState2[0],\n      setSearchInput = _useState2[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState3 = useState(cart),\n      state = _useState3[0],\n      setState = _useState3[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.map(function (res) {\n    return _objectSpread(_objectSpread({}, res), {}, {\n      dishes: res.dishes.filter(function (dish) {\n        return dish.name.toLowerCase().includes(searchInput.toLowerCase());\n      }),\n      drinks: res.drinks.filter(function (drink) {\n        return drink.name.toLowerCase().includes(searchInput.toLowerCase());\n      })\n    });\n  }).filter(function (res) {\n    return res.dishes.length > 0 || res.drinks.length > 0 || res.name.toLowerCase().includes(searchInput.toLowerCase());\n  });\n  var restId = restaurantID;\n\n  var handleRestaurantClick = function handleRestaurantClick(res) {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  }; // define renderer for Dishes\n\n\n  var renderDishes = function renderDishes() {\n    if (restId === 0) return null;\n    var restaurant = data.restaurants.find(function (res) {\n      return res.id === restId;\n    });\n    if (!restaurant) return null;\n    return __jsx(Dishes, {\n      restId: restId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderDrinks = function renderDrinks() {\n    if (restId === 0) return null;\n    var restaurant = data.restaurants.find(function (res) {\n      return res.id === restId;\n    });\n    if (!restaurant) return null;\n    return __jsx(Drinks, {\n      restId: restId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var restList = searchQuery.map(function (res) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + res.image.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }\n    }, __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: res.id === restaurantID ? \"secondary\" : \"info\",\n      onClick: function onClick() {\n        return handleRestaurantClick(res);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }, res.name)), res.showDishes && __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Dishes:\"), __jsx(Dishes, {\n      dishes: res.dishes,\n      restId: res.id,\n      search: props.search,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    })), res.showDrinks && __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Drinks:\"), __jsx(Drinks, {\n      drinks: res.drinks,\n      restId: res.id,\n      search: props.search,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, restList));\n}\n\n_s(RestaurantList, \"YrkYM/ToRXhOkcxTRfARKRuvCe8=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","restaurantID","setRestaurantID","searchInput","setSearchInput","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","map","res","dishes","filter","dish","name","toLowerCase","includes","drinks","drink","length","restId","handleRestaurantClick","id","renderDishes","restaurant","find","renderDrinks","restList","margin","height","image","url","description","showDishes","search","showDrinks"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const [searchInput, setSearchInput] = useState('');\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  let searchQuery = data.restaurants\n    .map((res) => ({\n      ...res,\n      dishes: res.dishes.filter((dish) =>\n        dish.name.toLowerCase().includes(searchInput.toLowerCase())\n      ),\n      drinks: res.drinks.filter((drink) =>\n        drink.name.toLowerCase().includes(searchInput.toLowerCase())\n      )\n    }))\n    .filter(\n      (res) =>\n        res.dishes.length > 0 ||\n        res.drinks.length > 0 ||\n        res.name.toLowerCase().includes(searchInput.toLowerCase())\n    );\n\n  const restId = restaurantID;\n\n  const handleRestaurantClick = (res) => {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  };\n\n  // define renderer for Dishes\n  const renderDishes = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find((res) => res.id === restId);\n    if (!restaurant) return null;\n    return <Dishes restId={restId} />;\n  };\n  const renderDrinks = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find((res) => res.id === restId);\n    if (!restaurant) return null;\n    return <Drinks restId={restId} />;\n  };\n\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + res.image.url}\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button\n            color={res.id === restaurantID ? \"secondary\" : \"info\"}\n            onClick={() => handleRestaurantClick(res)}          >\n            {res.name}\n          </Button>\n        </div>\n        {res.showDishes && (\n          <CardBody>\n            <CardTitle>Dishes:</CardTitle>\n            <Dishes\n              dishes={res.dishes}\n              restId={res.id}\n              search={props.search}\n            />\n          </CardBody>\n        )}\n        {res.showDrinks && (\n          <CardBody>\n            <CardTitle>Drinks:</CardTitle>\n            <Drinks\n              drinks={res.drinks}\n              restId={res.id}\n              search={props.search}\n            />\n          </CardBody>\n        )}\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n\n         \n"]},"metadata":{},"sourceType":"module"}