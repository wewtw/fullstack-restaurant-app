{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search) || res.dishes.some(function (dish) {\n      return dish.name.toLowerCase().includes(props.search);\n    });\n  });\n  var restId = restaurantID; // define renderer for Dishes\n\n  var renderDishes = function renderDishes() {\n    var restaurant = data.restaurants.find(function (res) {\n      return res.id === restaurantID;\n    });\n    if (!restaurantID || !restaurant) return null;\n    return __jsx(Dishes, {\n      dishes: restaurant.dishes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 12\n      }\n    });\n  }; // define handler for restaurant button click\n\n\n  var handleRestaurantClick = function handleRestaurantClick(id) {\n    if (id === restaurantID) {\n      setRestaurantID(0); // hide dishes if same restaurant button is clicked\n    } else {\n      setRestaurantID(id); // show dishes for selected restaurant\n    }\n\n    console.log(id);\n  };\n\n  var restList = searchQuery.map(function (res) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + res.image.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      onClick: function onClick() {\n        return setRestaurantID(function (prevID) {\n          return prevID === res.id ? 0 : res.id;\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, res.name))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, renderDishes()));\n}\n\n_s(RestaurantList, \"AG1Od7CGruCtgOneqAeKWk/inGw=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","dishes","some","dish","restId","renderDishes","restaurant","find","id","handleRestaurantClick","restList","map","margin","height","image","url","description","prevID"],"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,SAPF,EAQEC,GARF,EASEC,GATF,QAUO,YAVP;;AAYA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAAA;;AAAA,kBACWhB,QAAQ,CAAC,CAAD,CADnB;AAAA,MACtBiB,YADsB;AAAA,MACRC,eADQ;;AAAA,oBAEZjB,UAAU,CAACI,UAAD,CAFE;AAAA,MAErBc,IAFqB,eAErBA,IAFqB;;AAAA,mBAGHnB,QAAQ,CAACmB,IAAD,CAHL;AAAA,MAGtBC,KAHsB;AAAA,MAGfC,QAHe;;AAI7B,MAAMC,eAAe,GAAGpB,GAAH,mBAArB;;AAJ6B,kBAsBIC,QAAQ,CAACmB,eAAD,CAtBZ;AAAA,MAsBrBC,OAtBqB,aAsBrBA,OAtBqB;AAAA,MAsBZC,KAtBY,aAsBZA,KAtBY;AAAA,MAsBLC,IAtBK,aAsBLA,IAtBK;;AAuB7B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACX,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,uBAA2BF,IAAI,CAACG,WAAhC;AAEA,MAAIC,WAAW,GAAGJ,IAAI,CAACG,WAAL,CAAiBE,MAAjB,CAAwB,UAACC,GAAD,EAAS;AACjD,WACEA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgClB,KAAK,CAACmB,MAAtC,KACAJ,GAAG,CAACK,MAAJ,CAAWC,IAAX,CAAgB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACN,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiClB,KAAK,CAACmB,MAAvC,CAAV;AAAA,KAAhB,CAFF;AAID,GALiB,CAAlB;AAOA,MAAII,MAAM,GAAGtB,YAAb,CAnC6B,CAqC7B;;AACA,MAAMuB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAMC,UAAU,GAAGhB,IAAI,CAACG,WAAL,CAAiBc,IAAjB,CAAsB,UAACX,GAAD;AAAA,aAASA,GAAG,CAACY,EAAJ,KAAW1B,YAApB;AAAA,KAAtB,CAAnB;AACA,QAAI,CAACA,YAAD,IAAiB,CAACwB,UAAtB,EAAkC,OAAO,IAAP;AAClC,WAAO,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,UAAU,CAACL,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAJD,CAtC6B,CA6C7B;;;AACA,MAAMQ,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACD,EAAD,EAAQ;AACpC,QAAIA,EAAE,KAAK1B,YAAX,EAAyB;AACvBC,MAAAA,eAAe,CAAC,CAAD,CAAf,CADuB,CACH;AACrB,KAFD,MAEO;AACLA,MAAAA,eAAe,CAACyB,EAAD,CAAf,CADK,CACgB;AACtB;;AACDjB,IAAAA,OAAO,CAACC,GAAR,CAAYgB,EAAZ;AACD,GAPD;;AASA,MAAME,QAAQ,GAAGhB,WAAW,CAACiB,GAAZ,CAAgB,UAACf,GAAD;AAAA,WAC/B,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AAAmB,MAAA,GAAG,EAAEA,GAAG,CAACY,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,GAAG,EAAE,IADP;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,GAAG,EAAE,0BAA0BjB,GAAG,CAACkB,KAAJ,CAAUC,GAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWnB,GAAG,CAACoB,WAAf,CADF,CANF,EASE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,MAAD;AACN,MAAA,KAAK,EAAC,MADA;AAEN,MAAA,OAAO,EAAE;AAAA,eACPjC,eAAe,CAAC,UAACkC,MAAD;AAAA,iBAAaA,MAAM,KAAKrB,GAAG,CAACY,EAAf,GAAoB,CAApB,GAAwBZ,GAAG,CAACY,EAAzC;AAAA,SAAD,CADR;AAAA,OAFH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMLZ,GAAG,CAACC,IANC,CADA,CATF,CADF,CAD+B;AAAA,GAAhB,CAAjB;AAyBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaa,QAAb,CADF,EAGE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaL,YAAY,EAAzB,CAHF,CADF;AAOD;;GAvFQzB,c;UAsB0BZ,Q;;;KAtB1BY,c;AAyFT,eAAeA,cAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\n\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col,\n} from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  let searchQuery = data.restaurants.filter((res) => {\n    return (\n      res.name.toLowerCase().includes(props.search) ||\n      res.dishes.some((dish) => dish.name.toLowerCase().includes(props.search))\n    );\n  });\n\n  let restId = restaurantID;\n\n  // define renderer for Dishes\n  const renderDishes = () => {\n    const restaurant = data.restaurants.find((res) => res.id === restaurantID);\n    if (!restaurantID || !restaurant) return null;\n    return <Dishes dishes={restaurant.dishes} />;\n  };\n  \n  \n  // define handler for restaurant button click\n  const handleRestaurantClick = (id) => {\n    if (id === restaurantID) {\n      setRestaurantID(0); // hide dishes if same restaurant button is clicked\n    } else {\n      setRestaurantID(id); // show dishes for selected restaurant\n    }\n    console.log(id)\n  };\n\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + res.image.url}\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n        <Button\n  color=\"info\"\n  onClick={() =>\n    setRestaurantID((prevID) => (prevID === res.id ? 0 : res.id))\n  }\n>\n  {res.name}\n</Button>\n        </div>\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n\n      <Row xs=\"3\">{renderDishes()}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}