{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query($id: ID!) {\\n        restaurant(id: $id) {\\n          id\\n          name\\n          dishes {\\n            id\\n            name\\n            description\\n            price\\n            image {\\n              url\\n            }\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nvar Dishes = function Dishes(_ref) {\n  _s();\n\n  var restId = _ref.restId,\n      searchQuery = _ref.searchQuery;\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"No dishes found\");\n  var dishes = data.restaurant.dishes.filter(function (dish) {\n    return dish.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  return __jsx(React.Fragment, null, dishes.map(function (dish) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: dish.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\",\n        background: \"lightpink\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + dish.image.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, dish.name), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, dish.description), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, \"$\", dish.price), __jsx(Button, {\n      onClick: function onClick() {\n        return addItem(dish);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Add to cart\"))));\n  }));\n};\n\n_s(Dishes, \"2IiZu96LzC4KzwsvR/Bt1ejWkMs=\", false, function () {\n  return [useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","searchQuery","addItem","GET_RESTAURANT_DISHES","variables","id","loading","error","data","dishes","restaurant","filter","dish","name","toLowerCase","includes","map","margin","background","height","image","url","description","price"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n  const Dishes = ({ restId, searchQuery }) => {\n    const { addItem } = useContext(AppContext);\n  \n    const GET_RESTAURANT_DISHES = gql`\n      query($id: ID!) {\n        restaurant(id: $id) {\n          id\n          name\n          dishes {\n            id\n            name\n            description\n            price\n            image {\n              url\n            }\n          }\n        }\n      }\n    `;\n  \n    const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n      variables: { id: restId },\n    });\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>ERROR here</p>;\n    if (!data) return <p>No dishes found</p>;\n  \n    const dishes = data.restaurant.dishes.filter(\n      (dish) => dish.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  \n    return (\n      <>\n        {dishes.map((dish) => (\n          <Col xs=\"6\" sm=\"4\" key={dish.id}>\n            <Card style={{ margin: \"0 0.5rem 20px 0.5rem\", background: \"lightpink\" }}>\n              <CardImg\n                top={true}\n                style={{ height: 200 }}\n                src={`http://localhost:1337` + dish.image.url}\n              />\n              <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n                <CardText>${dish.price}</CardText>\n                <Button onClick={() => addItem(dish)}>Add to cart</Button>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </>\n    );\n  };\n  \n        \n  \nexport default Dishes"]},"metadata":{},"sourceType":"module"}