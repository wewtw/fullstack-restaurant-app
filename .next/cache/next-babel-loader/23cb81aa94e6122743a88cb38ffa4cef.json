{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nconst Dishes = ({\n  restId,\n  searchQuery\n}) => {\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n      query($id: ID!) {\n        restaurant(id: $id) {\n          id\n          name\n          dishes {\n            id\n            name\n            description\n            price\n            image {\n              url\n            }\n          }\n        }\n      }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"No dishes found\"); ///added filtering dishes. \n\n  const dishes = data.restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return __jsx(React.Fragment, null, dishes.map(dish => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    key: dish.id\n  }, __jsx(Card, {\n    style: {\n      margin: \"0 0.5rem 20px 0.5rem\",\n      background: \"lightpink\"\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 200\n    },\n    src: `http://localhost:1337` + dish.image.url\n  }), __jsx(CardBody, null, __jsx(CardTitle, null, dish.name), __jsx(CardText, null, dish.description), __jsx(CardText, null, \"$\", dish.price), __jsx(Button, {\n    onClick: () => addItem(dish)\n  }, \"Add to cart\"))))));\n};\n\nexport default Dishes;","map":null,"metadata":{},"sourceType":"module"}