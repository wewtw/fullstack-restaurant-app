{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  const filteredRestaurants = data.restaurants.filter(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    return matchedDishes.length > 0 || matchedDrinks.length > 0 || matchedRestaurant;\n  });\n  const restList = filteredRestaurants.map(restaurant => {\n    const matchedDishes = restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(props.search));\n    const matchedDrinks = restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(props.search));\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: restaurant.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337` + restaurant.image.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, __jsx(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, restaurant.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, restaurant.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      color: selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\",\n      onClick: () => setSelectedRestaurant(selectedRestaurant && selectedRestaurant.id === restaurant.id ? null : restaurant),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\")), selectedRestaurant && selectedRestaurant.id === restaurant.id && __jsx(React.Fragment, null, __jsx(Dishes, {\n      restId: restaurant.id,\n      filteredDishes: matchedDishes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }), __jsx(Drinks, {\n      restId: restaurant.id,\n      filteredDrinks: matchedDrinks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, restList));\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","gql","useQuery","Dishes","Drinks","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","filteredRestaurants","restaurants","filter","restaurant","matchedDishes","dishes","dish","name","toLowerCase","includes","search","matchedDrinks","drinks","drink","matchedRestaurant","length","restList","map","id","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n\n  const filteredRestaurants = data.restaurants.filter((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    const matchedRestaurant = restaurant.name.toLowerCase().includes(props.search);\n    return matchedDishes.length > 0 || matchedDrinks.length > 0 || matchedRestaurant;\n  });\n  \n  const restList = filteredRestaurants.map((restaurant) => {\n    const matchedDishes = restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const matchedDrinks = restaurant.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    return (\n      <Col xs=\"6\" sm=\"4\" key={restaurant.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + restaurant.image.url}\n          />\n          <CardBody>\n            <CardTitle>{restaurant.name}</CardTitle>\n            <CardText>{restaurant.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color={selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"secondary\" : \"info\"}\n              onClick={() => setSelectedRestaurant(selectedRestaurant && selectedRestaurant.id === restaurant.id ? null : restaurant)}\n            >\n              {selectedRestaurant && selectedRestaurant.id === restaurant.id ? \"Close\" : \"View Menu\"}\n            </Button>\n          </div>\n          {selectedRestaurant && selectedRestaurant.id === restaurant.id &&\n            <>\n              <Dishes restId={restaurant.id} filteredDishes={matchedDishes} />\n              <Drinks restId={restaurant.id} filteredDrinks={matchedDrinks} />\n            </>\n          }\n        </Card>\n      </Col>\n    );\n  });\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}