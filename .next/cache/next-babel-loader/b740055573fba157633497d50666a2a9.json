{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          price\\n          name\\n          description\\n          \\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  }).map(function (res) {\n    if (res.id === restaurantID) {\n      return _objectSpread(_objectSpread({}, res), {}, {\n        dishes: res.dishes.filter(function (dish) {\n          return dish.name.toLowerCase().includes(props.search);\n        }),\n        drinks: res.drinks.filter(function (drink) {\n          return drink.name.toLowerCase().includes(props.search);\n        })\n      });\n    } else {\n      return _objectSpread(_objectSpread({}, res), {}, {\n        dishes: res.dishes.filter(function (dish) {\n          return dish.name.toLowerCase().includes(props.search);\n        }),\n        drinks: res.drinks.filter(function (drink) {\n          return drink.name.toLowerCase().includes(props.search);\n        }),\n        showDishes: false,\n        showDrinks: false\n      });\n    }\n  }).filter(function (res) {\n    return res.dishes.length + res.drinks.length > 0;\n  });\n  var restId = restaurantID;\n\n  var handleRestaurantClick = function handleRestaurantClick(res) {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  }; // define renderer for Dishes\n\n\n  var renderDishes = function renderDishes() {\n    if (restId === 0) return null;\n    var restaurant = data.restaurants.find(function (res) {\n      return res.id === restId;\n    });\n    if (!restaurant) return null;\n    return __jsx(Dishes, {\n      restId: restId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderDrinks = function renderDrinks() {\n    if (restId === 0) return null;\n    var restaurant = data.restaurants.find(function (res) {\n      return res.id === restId;\n    });\n    if (!restaurant) return null;\n    return __jsx(Drinks, {\n      restId: restId,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var restList = searchQuery.map(function (res) {\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 7\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + res.image.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      color: res.id === restaurantID ? \"secondary\" : \"info\",\n      onClick: function onClick() {\n        return handleRestaurantClick(res);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }\n    }, res.name))));\n  });\n  return __jsx(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 5\n    }\n  }, __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, restList), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, renderDishes()), __jsx(Row, {\n    xs: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, renderDrinks()));\n}\n\n_s(RestaurantList, \"AG1Od7CGruCtgOneqAeKWk/inGw=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","map","id","dishes","dish","drinks","drink","showDishes","showDrinks","length","restId","handleRestaurantClick","renderDishes","restaurant","find","renderDrinks","restList","margin","height","image","url","description"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,QAAvB,EAAiCC,OAAjC,EAA0CC,QAA1C,EAAoDC,SAApD,EAA+DC,GAA/D,EAAoEC,SAApE,EAA+EC,GAA/E,QAA0F,YAA1F;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAAA;;AAAA,kBACWjB,QAAQ,CAAC,CAAD,CADnB;AAAA,MACtBkB,YADsB;AAAA,MACRC,eADQ;;AAAA,oBAEZlB,UAAU,CAACK,UAAD,CAFE;AAAA,MAErBc,IAFqB,eAErBA,IAFqB;;AAAA,mBAGHpB,QAAQ,CAACoB,IAAD,CAHL;AAAA,MAGtBC,KAHsB;AAAA,MAGfC,QAHe;;AAI7B,MAAMC,eAAe,GAAGrB,GAAH,mBAArB;;AAJ6B,kBA6BIC,QAAQ,CAACoB,eAAD,CA7BZ;AAAA,MA6BrBC,OA7BqB,aA6BrBA,OA7BqB;AAAA,MA6BZC,KA7BY,aA6BZA,KA7BY;AAAA,MA6BLC,IA7BK,aA6BLA,IA7BK;;AA8B7B,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;;AACb,MAAIC,KAAJ,EAAW;AAACE,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AAAoB,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAAqB;;AACrD,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AACXC,EAAAA,OAAO,CAACC,GAAR,uBAA2BF,IAAI,CAACG,WAAhC;AAEA,MAAIC,WAAW,GAAGJ,IAAI,CAACG,WAAL,CAAiBE,MAAjB,CAAwB,UAACC,GAAD;AAAA,WAC1CA,GAAG,CAACC,IAAJ,CAASC,WAAT,GAAuBC,QAAvB,CAAgClB,KAAK,CAACmB,MAAtC,CAD0C;AAAA,GAAxB,EAElBC,GAFkB,CAEd,UAACL,GAAD,EAAS;AACb,QAAIA,GAAG,CAACM,EAAJ,KAAWpB,YAAf,EAA6B;AAC3B,6CACKc,GADL;AAEEO,QAAAA,MAAM,EAAEP,GAAG,CAACO,MAAJ,CAAWR,MAAX,CAAkB,UAACS,IAAD;AAAA,iBACxBA,IAAI,CAACP,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiClB,KAAK,CAACmB,MAAvC,CADwB;AAAA,SAAlB,CAFV;AAKEK,QAAAA,MAAM,EAAET,GAAG,CAACS,MAAJ,CAAWV,MAAX,CAAkB,UAACW,KAAD;AAAA,iBACxBA,KAAK,CAACT,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkClB,KAAK,CAACmB,MAAxC,CADwB;AAAA,SAAlB;AALV;AASD,KAVD,MAUO;AACL,6CACKJ,GADL;AAEEO,QAAAA,MAAM,EAAEP,GAAG,CAACO,MAAJ,CAAWR,MAAX,CAAkB,UAACS,IAAD;AAAA,iBACxBA,IAAI,CAACP,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiClB,KAAK,CAACmB,MAAvC,CADwB;AAAA,SAAlB,CAFV;AAKEK,QAAAA,MAAM,EAAET,GAAG,CAACS,MAAJ,CAAWV,MAAX,CAAkB,UAACW,KAAD;AAAA,iBACxBA,KAAK,CAACT,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkClB,KAAK,CAACmB,MAAxC,CADwB;AAAA,SAAlB,CALV;AAQEO,QAAAA,UAAU,EAAE,KARd;AASEC,QAAAA,UAAU,EAAE;AATd;AAWD;AACF,GA1BmB,EA0BjBb,MA1BiB,CA0BV,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACO,MAAJ,CAAWM,MAAX,GAAoBb,GAAG,CAACS,MAAJ,CAAWI,MAA/B,GAAwC,CAA5C;AAAA,GA1BO,CAAlB;AA6BA,MAAMC,MAAM,GAAG5B,YAAf;;AAEA,MAAM6B,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACf,GAAD,EAAS;AACrC,QAAIA,GAAG,CAACM,EAAJ,KAAWpB,YAAf,EAA6B;AAC3BC,MAAAA,eAAe,CAAC,CAAD,CAAf,CAD2B,CACP;AACrB,KAFD,MAEO;AACLA,MAAAA,eAAe,CAACa,GAAG,CAACM,EAAL,CAAf;AACD;AACF,GAND,CAlE6B,CA0E7B;;;AACA,MAAMU,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIF,MAAM,KAAK,CAAf,EAAkB,OAAO,IAAP;AAClB,QAAMG,UAAU,GAAGvB,IAAI,CAACG,WAAL,CAAiBqB,IAAjB,CAAsB,UAAClB,GAAD;AAAA,aAASA,GAAG,CAACM,EAAJ,KAAWQ,MAApB;AAAA,KAAtB,CAAnB;AACA,QAAI,CAACG,UAAL,EAAiB,OAAO,IAAP;AACjB,WAAO,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALD;;AAMA,MAAMK,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIL,MAAM,KAAK,CAAf,EAAkB,OAAO,IAAP;AAClB,QAAMG,UAAU,GAAGvB,IAAI,CAACG,WAAL,CAAiBqB,IAAjB,CAAsB,UAAClB,GAAD;AAAA,aAASA,GAAG,CAACM,EAAJ,KAAWQ,MAApB;AAAA,KAAtB,CAAnB;AACA,QAAI,CAACG,UAAL,EAAiB,OAAO,IAAP;AACjB,WAAO,MAAC,MAAD;AAAQ,MAAA,MAAM,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GALD;;AAOA,MAAMM,QAAQ,GAAGtB,WAAW,CAACO,GAAZ,CAAgB,UAACL,GAAD;AAAA,WAC/B,MAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,GAAf;AAAmB,MAAA,GAAG,EAAEA,GAAG,CAACM,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEe,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,OAAD;AACE,MAAA,GAAG,EAAE,IADP;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAFT;AAGE,MAAA,GAAG,EAAE,0BAA0BtB,GAAG,CAACuB,KAAJ,CAAUC,GAH3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAWxB,GAAG,CAACyB,WAAf,CADF,CANF,EASE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,MAAD;AACE,MAAA,KAAK,EAAEzB,GAAG,CAACM,EAAJ,KAAWpB,YAAX,GAA0B,WAA1B,GAAwC,MADjD;AAEE,MAAA,OAAO,EAAE;AAAA,eAAM6B,qBAAqB,CAACf,GAAD,CAA3B;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,GAAG,CAACC,IAJP,CADF,CATF,CADF,CAD+B;AAAA,GAAhB,CAAjB;AAuBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAamB,QAAb,CADF,EAEE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaJ,YAAY,EAAzB,CAFF,EAGE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAaG,YAAY,EAAzB,CAHF,CADF;AAOD;;GAtHQnC,c;UA6B0Bb,Q;;;KA7B1Ba,c;AAwHT,eAAeA,cAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  let searchQuery = data.restaurants.filter((res) =>\n  res.name.toLowerCase().includes(props.search)\n).map((res) => {\n  if (res.id === restaurantID) {\n    return {\n      ...res,\n      dishes: res.dishes.filter((dish) =>\n        dish.name.toLowerCase().includes(props.search)\n      ),\n      drinks: res.drinks.filter((drink) =>\n        drink.name.toLowerCase().includes(props.search)\n      ),\n    };\n  } else {\n    return {\n      ...res,\n      dishes: res.dishes.filter((dish) =>\n        dish.name.toLowerCase().includes(props.search)\n      ),\n      drinks: res.drinks.filter((drink) =>\n        drink.name.toLowerCase().includes(props.search)\n      ),\n      showDishes: false,\n      showDrinks: false\n    };\n  }\n}).filter(res => res.dishes.length + res.drinks.length > 0 );\n\n\n  const restId = restaurantID;\n\n  const handleRestaurantClick = (res) => {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  };\n\n  // define renderer for Dishes\n  const renderDishes = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find((res) => res.id === restId);\n    if (!restaurant) return null;\n    return <Dishes restId={restId} />;\n  };\n  const renderDrinks = () => {\n    if (restId === 0) return null;\n    const restaurant = data.restaurants.find((res) => res.id === restId);\n    if (!restaurant) return null;\n    return <Drinks restId={restId} />;\n  };\n\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id}>\n      <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={`http://localhost:1337` + res.image.url}\n        />\n        <CardBody>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n        <div className=\"card-footer\">\n          <Button\n            color={res.id === restaurantID ? \"secondary\" : \"info\"}\n            onClick={() => handleRestaurantClick(res)}\n          >\n            {res.name}\n          </Button>\n        </div>\n      </Card>\n    </Col>\n  ));\n\n  return (\n    <Container>\n      <Row xs=\"3\">{restList}</Row>\n      <Row xs=\"3\">{renderDishes()}</Row>\n      <Row xs=\"3\">{renderDrinks()}</Row>\n    </Container>\n  );\n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}