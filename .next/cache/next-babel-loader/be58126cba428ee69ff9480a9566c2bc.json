{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          price\\n          name\\n          description\\n          \\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 42\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.map(function (res) {\n    var filteredDishes = res.dishes.filter(function (dish) {\n      return dish.name.toLowerCase().includes(props.search.toLowerCase());\n    });\n    var filteredDrinks = res.drinks.filter(function (drink) {\n      return drink.name.toLowerCase().includes(props.search.toLowerCase());\n    });\n    var filteredRestaurant = res.name.toLowerCase().includes(props.search.toLowerCase());\n    return _objectSpread(_objectSpread({}, res), {}, {\n      dishes: filteredDishes,\n      drinks: filteredDrinks,\n      showDishes: filteredDishes.length > 0,\n      showDrinks: filteredDrinks.length > 0,\n      showRestaurant: filteredRestaurant\n    });\n  });\n  var restId = restaurantID;\n\n  var handleRestaurantClick = function handleRestaurantClick(res) {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  }; // define renderer for Dishes\n\n\n  var renderDishes = function renderDishes() {\n    var restaurant = searchQuery.find(function (res) {\n      return res.id === restaurantID;\n    });\n    if (!restaurant || !restaurant.showDishes) return null;\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var renderDrinks = function renderDrinks() {\n    var restaurant = searchQuery.find(function (res) {\n      return res.id === restaurantID;\n    });\n    if (!restaurant || !restaurant.showDrinks) return null;\n    return __jsx(Drinks, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }\n    });\n  };\n\n  var restList = searchQuery.map(function (res) {\n    if (!res.showDishes && !res.showDrinks && !res.showRestaurant) {\n      return null;\n    }\n\n    return __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      key: res.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, __jsx(Card, {\n      style: {\n        margin: \"0 0.5rem 20px 0.5rem\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: \"http://localhost:1337\" + res.image.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, res.description)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, __jsx(Button, {\n      color: res.id === restaurantID ? \"secondary\" : \"info\",\n      onClick: function onClick() {\n        return handleRestaurantClick(res);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, res.name))));\n  });\n}\n\n_s(RestaurantList, \"AG1Od7CGruCtgOneqAeKWk/inGw=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","map","res","filteredDishes","dishes","filter","dish","name","toLowerCase","includes","search","filteredDrinks","drinks","drink","filteredRestaurant","showDishes","length","showDrinks","showRestaurant","restId","handleRestaurantClick","id","renderDishes","restaurant","find","renderDrinks","restList","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\n\nfunction RestaurantList(props) {\n  const [restaurantID, setRestaurantID] = useState(0);\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n          \n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  if (loading) return <p>Loading...</p>;\n  if (error) {console.log(error); return <p>ERROR</p>;}\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  \n  let searchQuery = data.restaurants.map((res) => {\n    const filteredDishes = res.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    const filteredDrinks = res.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search.toLowerCase())\n    );\n    const filteredRestaurant = res.name.toLowerCase().includes(props.search.toLowerCase());\n  \n    return {\n      ...res,\n      dishes: filteredDishes,\n      drinks: filteredDrinks,\n      showDishes: filteredDishes.length > 0,\n      showDrinks: filteredDrinks.length > 0,\n      showRestaurant: filteredRestaurant,\n    };\n  });\n\n  \n\n  const restId = restaurantID;\n\n  const handleRestaurantClick = (res) => {\n    if (res.id === restaurantID) {\n      setRestaurantID(0); // if already selected, deselect\n    } else {\n      setRestaurantID(res.id);\n    }\n  };\n\n  // define renderer for Dishes\n  const renderDishes = () => {\n    const restaurant = searchQuery.find((res) => res.id === restaurantID);\n    if (!restaurant || !restaurant.showDishes) return null;\n    return <Dishes restId={restaurantID} />;\n  };\n  \n  const renderDrinks = () => {\n    const restaurant = searchQuery.find((res) => res.id === restaurantID);\n    if (!restaurant || !restaurant.showDrinks) return null;\n    return <Drinks restId={restaurantID} />;\n  };\n  \n\n  const restList = searchQuery.map((res) => {\n    if (!res.showDishes && !res.showDrinks && !res.showRestaurant) {\n      return null;\n    }\n  \n    return (\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={`http://localhost:1337` + res.image.url}\n          />\n          <CardBody>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n            <Button\n              color={res.id === restaurantID ? \"secondary\" : \"info\"}\n              onClick={() => handleRestaurantClick(res)}\n            >\n              {res.name}\n            </Button>\n          </div>\n        </Card>\n      </Col>\n    );\n  });\n  \n  \n}\n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}