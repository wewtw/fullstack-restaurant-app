{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const {\n    0: search,\n    1: setSearch\n  } = useState(\"\");\n  const {\n    0: selectedRestaurant,\n    1: setSelectedRestaurant\n  } = useState(null);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANTS);\n\n  const handleSearchChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleRestaurantSelect = restaurant => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const renderMenu = () => {\n    if (selectedRestaurant) {\n      return __jsx(React.Fragment, null, __jsx(Button, {\n        onClick: () => setSelectedRestaurant(null),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }\n      }, \"Back to restaurants\"), __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      }, selectedRestaurant.name, \" menu:\"), __jsx(Dishes, {\n        dishes: selectedRestaurant.dishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }), __jsx(Drinks, {\n        drinks: selectedRestaurant.drinks,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }));\n    } else {\n      return __jsx(React.Fragment, null, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, \"Restaurants:\"), __jsx(\"input\", {\n        type: \"text\",\n        placeholder: \"Search\",\n        value: search,\n        onChange: handleSearchChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }), __jsx(Container, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }\n      }, __jsx(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }\n      }, data.restaurants.filter(restaurant => restaurant.name.toLowerCase().includes(search.toLowerCase())).map(restaurant => __jsx(Col, {\n        xs: 12,\n        md: 4,\n        key: restaurant.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 19\n        }\n      }, __jsx(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        width: \"100%\",\n        src: restaurant.image.url,\n        alt: restaurant.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 23\n        }\n      }), __jsx(CardBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 23\n        }\n      }, __jsx(CardTitle, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }\n      }, restaurant.name), __jsx(CardText, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      }, restaurant.description), __jsx(Button, {\n        onClick: () => handleRestaurantSelect(restaurant),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }\n      }, \"View menu\"))))))));\n    }\n  };\n\n  return renderMenu();\n}\n\nexport default RestaurantList;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","search","setSearch","selectedRestaurant","setSelectedRestaurant","GET_RESTAURANTS","loading","error","data","handleSearchChange","e","target","value","handleRestaurantSelect","restaurant","renderMenu","name","dishes","drinks","restaurants","filter","toLowerCase","includes","map","id","image","url","description"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Col,\n  Container,\n  Row,\n} from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const [search, setSearch] = useState(\"\");\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n\n  const handleSearchChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  const handleRestaurantSelect = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  const renderMenu = () => {\n    if (selectedRestaurant) {\n      return (\n        <>\n          <Button onClick={() => setSelectedRestaurant(null)}>\n            Back to restaurants\n          </Button>\n          <h2>{selectedRestaurant.name} menu:</h2>\n          <Dishes dishes={selectedRestaurant.dishes} />\n          <Drinks drinks={selectedRestaurant.drinks} />\n        </>\n      );\n    } else {\n      return (\n        <>\n          <h2>Restaurants:</h2>\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            value={search}\n            onChange={handleSearchChange}\n          />\n          <Container>\n            <Row>\n              {data.restaurants\n                .filter((restaurant) =>\n                  restaurant.name.toLowerCase().includes(search.toLowerCase())\n                )\n                .map((restaurant) => (\n                  <Col xs={12} md={4} key={restaurant.id}>\n                    <Card>\n                      <CardImg\n                        top\n                        width=\"100%\"\n                        src={restaurant.image.url}\n                        alt={restaurant.name}\n                      />\n                      <CardBody>\n                        <CardTitle>{restaurant.name}</CardTitle>\n                        <CardText>{restaurant.description}</CardText>\n                        <Button\n                          onClick={() => handleRestaurantSelect(restaurant)}\n                        >\n                          View menu\n                        </Button>\n                      </CardBody>\n                    </Card>\n                  </Col>\n                ))}\n            </Row>\n          </Container>\n        </>\n      );\n    }\n  };\n\n  return renderMenu();\n}\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}