{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n        dishes {\\n          id\\n          name\\n          description\\n          price\\n        }\\n        drinks {\\n          id\\n          price\\n          name\\n          description\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState = useState(cart),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  var _useState2 = useState(null),\n      selectedRestaurant = _useState2[0],\n      setSelectedRestaurant = _useState2[1];\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n\n  if (error) {\n    console.log(error);\n    return __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 12\n      }\n    }, \"ERROR\");\n  }\n\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.flatMap(function (res) {\n    var filteredDishes = res.dishes.filter(function (dish) {\n      return dish.name.toLowerCase().includes(props.search);\n    });\n    var filteredDrinks = res.drinks.filter(function (drink) {\n      return drink.name.toLowerCase().includes(props.search);\n    });\n\n    if (filteredDishes.length + filteredDrinks.length === 0) {\n      return [];\n    } else {\n      return [_objectSpread(_objectSpread({}, res), {}, {\n        dishes: filteredDishes,\n        drinks: filteredDrinks,\n        showDishes: false,\n        showDrinks: false,\n        matched: filteredDishes.length > 0 || filteredDrinks.length > 0\n      })];\n    }\n  }).filter(function (res) {\n    return res.matched;\n  });\n\n  var handleRestaurantClick = function handleRestaurantClick(restaurant) {\n    setSelectedRestaurant(restaurant);\n  };\n\n  var renderDishes = function renderDishes() {\n    if (!selectedRestaurant) return null;\n    return __jsx(Dishes, {\n      restId: selectedRestaurant.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 14\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, searchQuery.length > 0 ? searchQuery.map(function (restaurant) {\n    return __jsx(\"div\", {\n      key: restaurant.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, __jsx(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 15\n      }\n    }, restaurant.name), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, restaurant.description), __jsx(\"img\", {\n      src: restaurant.image.url,\n      alt: restaurant.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), __jsx(\"button\", {\n      onClick: function onClick() {\n        return handleRestaurantClick(restaurant);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"View Dishes\"), restaurant.showDishes && __jsx(DishesList, {\n      dishes: restaurant.dishes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }), restaurant.showDrinks && __jsx(DrinksList, {\n      drinks: restaurant.drinks,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }));\n  }) : __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, \"No results found\"), renderDishes());\n}\n\n_s(RestaurantList, \"raNtfS0oO2lpYzhTWm2n3V5pkVE=\", false, function () {\n  return [useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["React","useState","useContext","gql","useQuery","Dishes","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Col","Container","Row","RestaurantList","props","cart","state","setState","GET_RESTAURANTS","loading","error","data","selectedRestaurant","setSelectedRestaurant","console","log","restaurants","searchQuery","flatMap","res","filteredDishes","dishes","filter","dish","name","toLowerCase","includes","search","filteredDrinks","drinks","drink","length","showDishes","showDrinks","matched","handleRestaurantClick","restaurant","renderDishes","id","map","description","image","url"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport Dishes from \"./dishes\";\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Col, Container, Row } from 'reactstrap';\n\n\nfunction RestaurantList(props) {\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart);\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n        dishes {\n          id\n          name\n          description\n          price\n        }\n        drinks {\n          id\n          price\n          name\n          description\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS);\n  const [selectedRestaurant, setSelectedRestaurant] = useState(null);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) {\n    console.log(error);\n    return <p>ERROR</p>;\n  }\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`);\n\n  let searchQuery = data.restaurants.flatMap((res) => {\n    const filteredDishes = res.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(props.search)\n    );\n    const filteredDrinks = res.drinks.filter((drink) =>\n      drink.name.toLowerCase().includes(props.search)\n    );\n    if (filteredDishes.length + filteredDrinks.length === 0) {\n      return [];\n    } else {\n      return [\n        {\n          ...res,\n          dishes: filteredDishes,\n          drinks: filteredDrinks,\n          showDishes: false,\n          showDrinks: false,\n          matched: filteredDishes.length > 0 || filteredDrinks.length > 0,\n        },\n      ];\n    }\n  }).filter((res) => res.matched);\n\n  const handleRestaurantClick = (restaurant) => {\n    setSelectedRestaurant(restaurant);\n  };\n\n  \n  \n    const renderDishes = () => {\n      if (!selectedRestaurant) return null;\n      return <Dishes restId={selectedRestaurant.id} />;\n    };\n  \n    return (\n      <div>\n        {searchQuery.length > 0 ? (\n          searchQuery.map((restaurant) => (\n            <div key={restaurant.id}>\n              <h2>{restaurant.name}</h2>\n              <p>{restaurant.description}</p>\n              <img src={restaurant.image.url} alt={restaurant.name} />\n              <button onClick={() => handleRestaurantClick(restaurant)}>\n                View Dishes\n              </button>\n              {restaurant.showDishes && (\n                <DishesList dishes={restaurant.dishes} />\n              )}\n              {restaurant.showDrinks && (\n                <DrinksList drinks={restaurant.drinks} />\n              )}\n            </div>\n          ))\n        ) : (\n          <p>No results found</p>\n        )}\n        {renderDishes()}\n      </div>\n    );\n  }\n  \n\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}