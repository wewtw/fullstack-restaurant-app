{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\drinks.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\n\nfunction Drinks(props) {\n  const GET_DRINKS = gql`\n      query {\n        drinks {\n          id\n          name\n          description\n          price\n          restaurant {\n            id\n          }\n        }\n      }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DRINKS);\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 23\n    }\n  }, \"Error :(\");\n  const drinksData = data.drinks.filter(drink => drink.restaurant.id === props.restId);\n  const drinksList = drinksData.map(drink => __jsx(Card, {\n    key: drink.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, __jsx(CardTitle, {\n    tag: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, drink.name), __jsx(CardSubtitle, {\n    tag: \"h6\",\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, drink.description), __jsx(CardSubtitle, {\n    tag: \"h6\",\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, drink.price))));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }\n  }, drinksList);\n}\n\nexport default Drinks;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/drinks.js"],"names":["React","gql","useQuery","Card","CardBody","CardTitle","CardSubtitle","Drinks","props","GET_DRINKS","loading","error","data","drinksData","drinks","filter","drink","restaurant","id","restId","drinksList","map","name","description","price"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,YAAxD;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACnB,QAAMC,UAAU,GAAGR,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAZI;AAcA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BV,QAAQ,CAACO,UAAD,CAAzC;AACA,MAAIC,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,QAAME,UAAU,GAAGD,IAAI,CAACE,MAAL,CAAYC,MAAZ,CAChBC,KAAD,IAAWA,KAAK,CAACC,UAAN,CAAiBC,EAAjB,KAAwBV,KAAK,CAACW,MADxB,CAAnB;AAIA,QAAMC,UAAU,GAAGP,UAAU,CAACQ,GAAX,CAAgBL,KAAD,IAChC,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACE,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBF,KAAK,CAACM,IAA3B,CADF,EAEE,MAAC,YAAD;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,WADT,CAFF,EAKE,MAAC,YAAD;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,KAAK,CAACQ,KADT,CALF,CADF,CADiB,CAAnB;AAcA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,UAAN,CAAP;AACD;;AAED,eAAeb,MAAf","sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\r\n\r\nfunction Drinks(props) {\r\n    const GET_DRINKS = gql`\r\n      query {\r\n        drinks {\r\n          id\r\n          name\r\n          description\r\n          price\r\n          restaurant {\r\n            id\r\n          }\r\n        }\r\n      }\r\n    `;\r\n  \r\n    const { loading, error, data } = useQuery(GET_DRINKS);\r\n    if (loading) return <p>Loading...</p>;\r\n    if (error) return <p>Error :(</p>;\r\n  \r\n    const drinksData = data.drinks.filter(\r\n      (drink) => drink.restaurant.id === props.restId\r\n    );\r\n  \r\n    const drinksList = drinksData.map((drink) => (\r\n      <Card key={drink.id}>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">{drink.name}</CardTitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n            {drink.description}\r\n          </CardSubtitle>\r\n          <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n            {drink.price}\r\n          </CardSubtitle>\r\n        </CardBody>\r\n      </Card>\r\n    ));\r\n  \r\n    return <div>{drinksList}</div>;\r\n  }\r\n  \r\n  export default Drinks;\r\n  "]},"metadata":{},"sourceType":"module"}