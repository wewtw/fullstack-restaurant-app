{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\drinks.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useContext } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Col, Card, CardImg, CardBody, CardTitle, CardText, Button } from \"reactstrap\";\nimport { AppContext } from \"../context/AppContext\";\n\nconst Drinks = ({\n  restId,\n  searchQuery\n}) => {\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DRINKS = gql`\n    query($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        drinks {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DRINKS, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 21\n    }\n  }, \"No drinks found\");\n  const drinks = data.restaurant.drinks.filter(drink => drink.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return __jsx(React.Fragment, null, drinks.map(drink => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    key: drink.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    style: {\n      margin: \"0 0.5rem 20px 0.5rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 200\n    },\n    src: `http://localhost:1337` + drink.image.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, drink.name), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, drink.description), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, \"$\", drink.price), __jsx(Button, {\n    onClick: () => addItem(drink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, \"Add to cart\"))))));\n};\n\nexport default Drinks;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/drinks.js"],"names":["useContext","useQuery","gql","Col","Card","CardImg","CardBody","CardTitle","CardText","Button","AppContext","Drinks","restId","searchQuery","addItem","GET_RESTAURANT_DRINKS","loading","error","data","variables","id","drinks","restaurant","filter","drink","name","toLowerCase","includes","map","margin","height","image","url","description","price"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,SAAvC,EAAkDC,QAAlD,EAA4DC,MAA5D,QAA0E,YAA1E;AACA,SAASC,UAAT,QAA2B,uBAA3B;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAcd,UAAU,CAACU,UAAD,CAA9B;AAEA,QAAMK,qBAAqB,GAAGb,GAAI;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhBE;AAkBA,QAAM;AAAEc,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BjB,QAAQ,CAACc,qBAAD,EAAwB;AAC/DI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAER;AAAN;AADoD,GAAxB,CAAzC;AAIA,MAAII,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AAEX,QAAMG,MAAM,GAAGH,IAAI,CAACI,UAAL,CAAgBD,MAAhB,CAAuBE,MAAvB,CACZC,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCd,WAAW,CAACa,WAAZ,EAAlC,CADE,CAAf;AAIA,SACE,4BACGL,MAAM,CAACO,GAAP,CAAYJ,KAAD,IACV,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,GAAG,EAAEA,KAAK,CAACJ,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE;AAAV,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,GAAG,EAAE,IADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,GAAG,EAAG,uBAAD,GAA0BN,KAAK,CAACO,KAAN,CAAYC,GAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYR,KAAK,CAACC,IAAlB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWD,KAAK,CAACS,WAAjB,CAFF,EAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAYT,KAAK,CAACU,KAAlB,CAHF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMpB,OAAO,CAACU,KAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CANF,CADF,CADD,CADH,CADF;AAqBD,CAtDD;;AAwDA,eAAeb,MAAf","sourcesContent":["import { useContext } from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport { Col, Card, CardImg, CardBody, CardTitle, CardText, Button } from \"reactstrap\";\r\nimport { AppContext } from \"../context/AppContext\";\r\n\r\nconst Drinks = ({ restId, searchQuery }) => {\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_RESTAURANT_DRINKS = gql`\r\n    query($id: ID!) {\r\n      restaurant(id: $id) {\r\n        id\r\n        name\r\n        drinks {\r\n          id\r\n          name\r\n          description\r\n          price\r\n          image {\r\n            url\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DRINKS, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>ERROR here</p>;\r\n  if (!data) return <p>No drinks found</p>;\r\n\r\n  const drinks = data.restaurant.drinks.filter(\r\n    (drink) => drink.name.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {drinks.map((drink) => (\r\n        <Col xs=\"6\" sm=\"4\" key={drink.id}>\r\n          <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\r\n            <CardImg\r\n              top={true}\r\n              style={{ height: 200 }}\r\n              src={`http://localhost:1337` + drink.image.url}\r\n            />\r\n            <CardBody>\r\n              <CardTitle>{drink.name}</CardTitle>\r\n              <CardText>{drink.description}</CardText>\r\n              <CardText>${drink.price}</CardText>\r\n              <Button onClick={() => addItem(drink)}>Add to cart</Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Drinks;\r\n"]},"metadata":{},"sourceType":"module"}