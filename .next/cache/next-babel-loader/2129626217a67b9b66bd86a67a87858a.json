{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nconst Dishes = ({\n  restId,\n  searchQuery\n}) => {\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n      query($id: ID!) {\n        restaurant(id: $id) {\n          id\n          name\n          dishes {\n            id\n            name\n            description\n            price\n            image {\n              url\n            }\n          }\n        }\n      }\n    `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }\n  }, \"No dishes found\");\n  const dishes = data.restaurant.dishes.filter(dish => dish.name.toLowerCase().includes(searchQuery.toLowerCase()));\n  return __jsx(React.Fragment, null, dishes.map(dish => __jsx(Col, {\n    xs: \"6\",\n    sm: \"4\",\n    key: dish.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, __jsx(Card, {\n    style: {\n      margin: \"0 0.5rem 20px 0.5rem\",\n      background: \"lightpink\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, __jsx(CardImg, {\n    top: true,\n    style: {\n      height: 200\n    },\n    src: `http://localhost:1337` + dish.image.url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }), __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, __jsx(CardTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, dish.name), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }, dish.description), __jsx(CardText, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }, \"$\", dish.price), __jsx(Button, {\n    onClick: () => addItem(dish),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, \"Add to cart\"))))));\n};\n\nexport default Dishes;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","searchQuery","addItem","GET_RESTAURANT_DISHES","loading","error","data","variables","id","dishes","restaurant","filter","dish","name","toLowerCase","includes","map","margin","background","height","image","url","description","price"],"mappings":";;;AAAA,SAAQA,SAAR,QAAwB,aAAxB;AACA,SAAQC,GAAR,EAAYC,QAAZ,QAA2B,gBAA3B;AACA,SAAQC,QAAR,EAAkBC,UAAlB,QAAmC,OAAnC;AACA,OAAOC,UAAP,MAAuB,WAAvB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,OAJF,EAKEC,QALF,EAMEC,SANF,EAOEC,GAPF,EAQEC,GARF,QAQY,YARZ;;AASE,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAD,KAA6B;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAcb,UAAU,CAACC,UAAD,CAA9B;AAEA,QAAMa,qBAAqB,GAAGjB,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAhBI;AAkBA,QAAM;AAAEkB,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BnB,QAAQ,CAACgB,qBAAD,EAAwB;AAC/DI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAER;AAAN;AADoD,GAAxB,CAAzC;AAIA,MAAII,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AAEX,QAAMG,MAAM,GAAGH,IAAI,CAACI,UAAL,CAAgBD,MAAhB,CAAuBE,MAAvB,CACZC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCd,WAAW,CAACa,WAAZ,EAAjC,CADG,CAAf;AAIA,SACE,4BACGL,MAAM,CAACO,GAAP,CAAYJ,IAAD,IACV,MAAC,GAAD;AAAK,IAAA,EAAE,EAAC,GAAR;AAAY,IAAA,EAAE,EAAC,GAAf;AAAmB,IAAA,GAAG,EAAEA,IAAI,CAACJ,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE,sBAAV;AAAkCC,MAAAA,UAAU,EAAE;AAA9C,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AACE,IAAA,GAAG,EAAE,IADP;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,GAAG,EAAG,uBAAD,GAA0BP,IAAI,CAACQ,KAAL,CAAWC,GAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAYT,IAAI,CAACC,IAAjB,CADF,EAEE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWD,IAAI,CAACU,WAAhB,CAFF,EAGE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAYV,IAAI,CAACW,KAAjB,CAHF,EAIE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMrB,OAAO,CAACU,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,CANF,CADF,CADD,CADH,CADF;AAqBD,CAtDD;;AA0DF,eAAeb,MAAf","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n  const Dishes = ({ restId, searchQuery }) => {\n    const { addItem } = useContext(AppContext);\n  \n    const GET_RESTAURANT_DISHES = gql`\n      query($id: ID!) {\n        restaurant(id: $id) {\n          id\n          name\n          dishes {\n            id\n            name\n            description\n            price\n            image {\n              url\n            }\n          }\n        }\n      }\n    `;\n  \n    const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n      variables: { id: restId },\n    });\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>ERROR here</p>;\n    if (!data) return <p>No dishes found</p>;\n  \n    const dishes = data.restaurant.dishes.filter(\n      (dish) => dish.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  \n    return (\n      <>\n        {dishes.map((dish) => (\n          <Col xs=\"6\" sm=\"4\" key={dish.id}>\n            <Card style={{ margin: \"0 0.5rem 20px 0.5rem\", background: \"lightpink\" }}>\n              <CardImg\n                top={true}\n                style={{ height: 200 }}\n                src={`http://localhost:1337` + dish.image.url}\n              />\n              <CardBody>\n                <CardTitle>{dish.name}</CardTitle>\n                <CardText>{dish.description}</CardText>\n                <CardText>${dish.price}</CardText>\n                <Button onClick={() => addItem(dish)}>Add to cart</Button>\n              </CardBody>\n            </Card>\n          </Col>\n        ))}\n      </>\n    );\n  };\n  \n        \n  \nexport default Dishes"]},"metadata":{},"sourceType":"module"}