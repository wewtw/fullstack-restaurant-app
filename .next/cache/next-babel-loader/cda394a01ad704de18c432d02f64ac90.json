{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\restaurantList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    query GetDrinks($id: ID!) {\\n      restaurant(id: $id) {\\n        drinks {\\n          id\\n          name\\n          price\\n          description\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    query GetDishes($id: ID!) {\\n      restaurant(id: $id) {\\n        dishes {\\n          id\\n          name\\n          price\\n          description\\n          image {\\n            url\\n          }\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\";\nimport { useContext, useState } from 'react';\nimport Drinks from \"./drinks\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction RestaurantList(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  });\n  var restId = searchQuery.length > 0 && searchQuery[0].id > 0 ? searchQuery[0].id : null;\n  var GET_DISHES = gql(_templateObject2());\n\n  var _useQuery2 = useQuery(GET_DISHES, {\n    variables: {\n      id: restaurantID\n    }\n  }),\n      loadingDishes = _useQuery2.loading,\n      errorDishes = _useQuery2.error,\n      dataDishes = _useQuery2.data;\n\n  var GET_DRINKS = gql(_templateObject3());\n\n  var _useQuery3 = useQuery(GET_DRINKS, {\n    variables: {\n      id: restaurantID\n    }\n  }),\n      loadingDrinks = _useQuery3.loading,\n      errorDrinks = _useQuery3.error,\n      dataDrinks = _useQuery3.data; // Define renderer for Dishes\n\n\n  var renderDishes = function renderDishes() {\n    if (loadingDishes) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n    if (errorDishes) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    }, \"Error\");\n    if (!dataDishes) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, \"Not found\");\n    return __jsx(Dishes, {\n      dishes: dataDishes.restaurant.dishes,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    });\n  }; // Define renderer for Drinks\n\n\n  var renderDrinks = function renderDrinks() {\n    if (loadingDrinks) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 31\n      }\n    }, \"Loading...\");\n    if (errorDrinks) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 29\n      }\n    }, \"Error\");\n    if (!dataDrinks) return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 29\n      }\n    }, \"Not found\");\n    return __jsx(Drinks, {\n      drinks: dataDrinks.restaurant.drinks,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    });\n  };\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 7\n        }\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 9\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\" + res.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, res.name))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, restList), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, renderDishes(restaurantID)), __jsx(Row, {\n      xs: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, renderDrinks(restaurantID)));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 12\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s(RestaurantList, \"iVOAs+t0Lb7bZDQaNdf5b9R6m1g=\", false, function () {\n  return [useQuery, useQuery, useQuery];\n});\n\n_c = RestaurantList;\nexport default RestaurantList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/restaurantList.js"],"names":["gql","useQuery","Dishes","useContext","useState","Drinks","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","RestaurantList","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","searchQuery","restaurants","filter","res","name","toLowerCase","includes","search","restId","length","id","GET_DISHES","variables","loadingDishes","errorDishes","dataDishes","GET_DRINKS","loadingDrinks","errorDrinks","dataDrinks","renderDishes","restaurant","dishes","renderDrinks","drinks","restList","map","margin","height","image","url","description"],"mappings":"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","sourcesContent":["import { gql, useQuery } from '@apollo/client';\nimport Dishes from \"./dishes\"\nimport { useContext, useState } from 'react';\nimport Drinks from \"./drinks\";\n\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col\n} from \"reactstrap\";\n\nfunction RestaurantList(props){\n  const [restaurantID, setRestaurantID] = useState(0)\n  const { cart } = useContext(AppContext);\n  const [state, setState] = useState(cart)\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS)\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n\n  let searchQuery = data.restaurants.filter((res) =>{\n    return res.name.toLowerCase().includes(props.search)\n  })\n\n  let restId = searchQuery.length > 0 && searchQuery[0].id > 0 ? searchQuery[0].id : null;\n\n  const GET_DISHES = gql`\n    query GetDishes($id: ID!) {\n      restaurant(id: $id) {\n        dishes {\n          id\n          name\n          price\n          description\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  const { loading: loadingDishes, error: errorDishes, data: dataDishes } = useQuery(GET_DISHES, {\n    variables: { id: restaurantID }\n  });\n\n  const GET_DRINKS = gql`\n    query GetDrinks($id: ID!) {\n      restaurant(id: $id) {\n        drinks {\n          id\n          name\n          price\n          description\n        }\n      }\n    }\n  `;\n  const { loading: loadingDrinks, error: errorDrinks, data: dataDrinks } = useQuery(GET_DRINKS, {\n    variables: { id: restaurantID }\n  });\n\n  // Define renderer for Dishes\n  const renderDishes = () => {\n    if (loadingDishes) return <p>Loading...</p>;\n    if (errorDishes) return <p>Error</p>;\n    if (!dataDishes) return <p>Not found</p>;\n    return (<Dishes dishes={dataDishes.restaurant.dishes}></Dishes>)\n  };\n  \n  // Define renderer for Drinks\n  const renderDrinks = () => {\n    if (loadingDrinks) return <p>Loading...</p>;\n    if (errorDrinks) return <p>Error</p>;\n    if (!dataDrinks) return <p>Not found</p>;\n    return (<Drinks drinks={dataDrinks.restaurant.drinks}></Drinks>)\n  };\n  if(searchQuery.length > 0){\n    const restList = searchQuery.map((res) => (\n      <Col xs=\"6\" sm=\"4\" key={res.id}>\n        <Card style={{ margin: \"0 0.5rem 20px 0.5rem\" }}>\n          <CardImg\n            top={true}\n            style={{ height: 200 }}\n            src={\n            `http://localhost:1337`+ res.image.url\n            }\n          />\n          <CardBody>\n            <CardText>{res.description}</CardText>\n          </CardBody>\n          <div className=\"card-footer\">\n          \n          <Button color=\"info\" onClick={()=> setRestaurantID(res.id)}>{res.name}</Button>\n           \n          </div>\n        </Card>\n      </Col>\n    ))\n  \n    return(\n      <Container>\n        <Row xs='3'>\n          {restList}\n        </Row>\n        <Row xs='3'>\n          {renderDishes(restaurantID)}\n        </Row>\n        <Row xs='3'>\n          {renderDrinks(restaurantID)}\n        </Row>\n      </Container>\n    )\n  } else {\n    return <h1> No Restaurants Found</h1>\n  }\n}\nexport default RestaurantList;\n"]},"metadata":{},"sourceType":"module"}