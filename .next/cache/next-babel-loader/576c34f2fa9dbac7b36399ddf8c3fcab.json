{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\drinks.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\nimport { useState, useContext } from \"react\";\nimport AppContext from \"./context\";\n\nfunction Drinks({\n  restId\n}) {\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_DRINKS = gql`\n    query($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        drinks {\n          id\n          name\n          description\n          price\n        }\n      }\n    }\n  `;\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_DRINKS, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 23\n    }\n  }, \"Loading drinks...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }\n  }, \"Error: \", error.message);\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }\n  }, \"No drinks found\");\n  let drinksData = data.restaurant.drinks;\n\n  if (drinksData.length === 0) {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }\n    }, \"No drinks available at this restaurant\");\n  }\n\n  const drinksList = drinksData.map(drink => __jsx(Card, {\n    key: drink.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, __jsx(CardTitle, {\n    tag: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, drink.name), __jsx(CardSubtitle, {\n    tag: \"h6\",\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, drink.description), __jsx(CardSubtitle, {\n    tag: \"h6\",\n    className: \"mb-2 text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, drink.price)), __jsx(\"div\", {\n    className: \"card-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    outline: true,\n    color: \"primary\",\n    onClick: () => addItem(drink),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"+ Add To Cart\"))));\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, drinksList);\n}\n\nexport default Drinks;","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/drinks.js"],"names":["React","gql","useQuery","Card","CardBody","CardTitle","CardSubtitle","useState","useContext","AppContext","Drinks","restId","addItem","GET_DRINKS","loading","error","data","variables","id","message","drinksData","restaurant","drinks","length","drinksList","map","drink","name","description","price"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,SAAzB,EAAoCC,YAApC,QAAwD,YAAxD;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AACA,OAAOC,UAAP,MAAuB,WAAvB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA;AAAF,CAAhB,EAA4B;AAC1B,QAAM;AAAEC,IAAAA;AAAF,MAAcJ,UAAU,CAACC,UAAD,CAA9B;AAEA,QAAMI,UAAU,GAAGZ,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAbE;AAeA,QAAM;AAAEa,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bd,QAAQ,CAACW,UAAD,EAAa;AACpDI,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEP;AAAN;AADyC,GAAb,CAAzC;AAIA,MAAIG,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAWA,KAAK,CAACI,OAAjB,CAAP;AACX,MAAI,CAACH,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AAEX,MAAII,UAAU,GAAGJ,IAAI,CAACK,UAAL,CAAgBC,MAAjC;;AAEA,MAAIF,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDAAP;AACD;;AAED,QAAMC,UAAU,GAAGJ,UAAU,CAACK,GAAX,CAAgBC,KAAD,IAChC,MAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,KAAK,CAACR,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,GAAG,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBQ,KAAK,CAACC,IAA3B,CADF,EAEE,MAAC,YAAD;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,WADT,CAFF,EAKE,MAAC,YAAD;AAAc,IAAA,GAAG,EAAC,IAAlB;AAAuB,IAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACG,KADT,CALF,CADF,EAUE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,MAAf;AAAgB,IAAA,KAAK,EAAC,SAAtB;AAAgC,IAAA,OAAO,EAAE,MAAMjB,OAAO,CAACc,KAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAVF,CADiB,CAAnB;AAmBA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMF,UAAN,CAAP;AACD;;AAED,eAAed,MAAf","sourcesContent":["import React from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\r\nimport { useState, useContext } from \"react\";\r\nimport AppContext from \"./context\";\r\n\r\nfunction Drinks({ restId }) {\r\n  const { addItem } = useContext(AppContext);\r\n\r\n  const GET_DRINKS = gql`\r\n    query($id: ID!) {\r\n      restaurant(id: $id) {\r\n        id\r\n        name\r\n        drinks {\r\n          id\r\n          name\r\n          description\r\n          price\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_DRINKS, {\r\n    variables: { id: restId },\r\n  });\r\n\r\n  if (loading) return <p>Loading drinks...</p>;\r\n  if (error) return <p>Error: {error.message}</p>;\r\n  if (!data) return <p>No drinks found</p>;\r\n\r\n  let drinksData = data.restaurant.drinks;\r\n\r\n  if (drinksData.length === 0) {\r\n    return <h1>No drinks available at this restaurant</h1>;\r\n  }\r\n\r\n  const drinksList = drinksData.map((drink) => (\r\n    <Card key={drink.id}>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">{drink.name}</CardTitle>\r\n        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n          {drink.description}\r\n        </CardSubtitle>\r\n        <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">\r\n          {drink.price}\r\n        </CardSubtitle>\r\n      </CardBody>\r\n      <div className=\"card-footer\">\r\n        <Button outline color=\"primary\" onClick={() => addItem(drink)}>\r\n          + Add To Cart\r\n        </Button>\r\n      </div>\r\n    </Card>\r\n  ));\r\n\r\n  return <div>{drinksList}</div>;\r\n}\r\n\r\nexport default Drinks;\r\n"]},"metadata":{},"sourceType":"module"}