{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\X\\\\Desktop\\\\MIT-Bootcamp-WebDev\\\\Week29\\\\setting-up-stripe_starter\\\\components\\\\dishes.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      query($id: ID!) {\\n        restaurant(id: $id) {\\n          id\\n          name\\n          dishes {\\n            id\\n            name\\n            description\\n            price\\n            image {\\n              url\\n            }\\n          }\\n        }\\n      }\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  _s();\n\n  var _this = this;\n\n  var restId = _ref.restId,\n      searchQuery = _ref.searchQuery;\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 23\n    }\n  }, \"Error!\");\n  var dishes = data.restaurant.dishes.filter(function (dish) {\n    return dish.name.toLowerCase().includes(searchQuery.toLowerCase());\n  });\n  return __jsx(React.Fragment, null, __jsx(Input, {\n    type: \"text\",\n    placeholder: \"Search dishes\",\n    value: searchQuery,\n    onChange: function onChange(e) {\n      return setSearchQuery(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, dishes.map(function (dish) {\n    return __jsx(Col, {\n      md: \"4\",\n      key: dish.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      className: \"mb-4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      width: \"100%\",\n      src: dish.image.url,\n      alt: dish.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), __jsx(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, __jsx(CardTitle, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 19\n      }\n    }, dish.name), __jsx(CardText, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, dish.description), __jsx(Button, {\n      onClick: function onClick() {\n        return addItem(dish);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, \"Add to cart ($\", dish.price, \")\"))));\n  })));\n}\n\n_s(Dishes, \"/xuN6uf1Lw539Ffww9RgvBAdelA=\", false, function () {\n  return [useQuery];\n});\n\n_c = Dishes;\nexport default Dishes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dishes\");","map":{"version":3,"sources":["C:/Users/X/Desktop/MIT-Bootcamp-WebDev/Week29/setting-up-stripe_starter/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","searchQuery","addItem","GET_RESTAURANT_DISHES","variables","id","loading","error","data","dishes","restaurant","filter","dish","name","toLowerCase","includes","e","setSearchQuery","target","value","map","image","url","description","price"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n  function Dishes({restId, searchQuery}) {\n    const {addItem} = useContext(AppContext)\n  \n    const GET_RESTAURANT_DISHES = gql`\n      query($id: ID!) {\n        restaurant(id: $id) {\n          id\n          name\n          dishes {\n            id\n            name\n            description\n            price\n            image {\n              url\n            }\n          }\n        }\n      }\n    `;\n  \n    const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n      variables: { id: restId },\n    });\n  \n    if (loading) return <p>Loading...</p>;\n    if (error) return <p>Error!</p>;\n  \n    const dishes = data.restaurant.dishes.filter((dish) =>\n      dish.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  \n    return (\n      <>\n        <Input\n          type=\"text\"\n          placeholder=\"Search dishes\"\n          value={searchQuery}\n          onChange={(e) => setSearchQuery(e.target.value)}\n        />\n        <Row>\n          {dishes.map((dish) => (\n            <Col md=\"4\" key={dish.id}>\n              <Card className=\"mb-4\">\n                <CardImg top width=\"100%\" src={dish.image.url} alt={dish.name} />\n                <CardBody>\n                  <CardTitle>{dish.name}</CardTitle>\n                  <CardText>{dish.description}</CardText>\n                  <Button onClick={() => addItem(dish)}>Add to cart (${dish.price})</Button>\n                </CardBody>\n              </Card>\n            </Col>\n          ))}\n        </Row>\n      </>\n      \n    );\n\n    \n  }\n        \n  \nexport default Dishes"]},"metadata":{},"sourceType":"module"}